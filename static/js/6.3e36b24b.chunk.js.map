{"version":3,"sources":["../node_modules/agora-criteria/dist/utils.js","../node_modules/d3-polygon/src/area.js","../node_modules/d3-polygon/src/centroid.js","../node_modules/d3-polygon/src/cross.js","../node_modules/d3-polygon/src/hull.js","../node_modules/d3-polygon/src/contains.js","../node_modules/d3-polygon/src/length.js","../node_modules/d3-polygon/src/index.js","../node_modules/agora-criteria/dist/interfaces.js","../node_modules/agora-criteria/dist/edge-based/index.js","../node_modules/agora-criteria/dist/edge-based/relative-standard-deviation-delaunay.js","../node_modules/agora-criteria/dist/edge-based/ratio.js","../node_modules/agora-criteria/dist/global-shape/index.js","../node_modules/agora-criteria/dist/global-shape/bounding-box/aspect-ratio.js","../node_modules/agora-criteria/dist/global-shape/bounding-box/improved-aspect-ratio.js","../node_modules/agora-criteria/dist/global-shape/convex-hull_standard-deviation.js","../node_modules/agora-criteria/dist/node-movement/index.js","../node_modules/agora-criteria/dist/node-movement/distance-moved/normalized-euclidean.js","../node_modules/agora-criteria/dist/node-movement/distance-moved/hamiltonian.js","../node_modules/agora-criteria/dist/node-movement/distance-moved/squared-euclidean.js","../node_modules/agora-criteria/dist/node-movement/distance-moved/improved-mean-squared-euclidean.js","../node_modules/agora-criteria/dist/node-movement/moved-nodes.js","../node_modules/agora-criteria/dist/node-movement/distance-moved/mean-euclidean.js","../node_modules/agora-criteria/dist/node-movement/k-nearest-neighbors.js","../node_modules/agora-criteria/dist/orthogonal-ordering/index.js","../node_modules/agora-criteria/dist/orthogonal-ordering/original.js","../node_modules/agora-criteria/dist/orthogonal-ordering/number-of-inversions.js","../node_modules/agora-criteria/dist/orthogonal-ordering/normalized-number-of-inversions.js","../node_modules/agora-criteria/dist/orthogonal-ordering/kendall-tau-distance.js","../node_modules/agora-criteria/dist/spread/index.js","../node_modules/agora-criteria/dist/spread/bounding-box/area.js","../node_modules/agora-criteria/dist/spread/bounding-box/normalized-area.js","../node_modules/agora-criteria/dist/spread/bounding-box/l1-metric-length.js","../node_modules/agora-criteria/dist/spread/convex-hull_area.js","../node_modules/agora-criteria/dist/index.js"],"names":["Object","defineProperty","exports","value","criteriaWrap","_a","name","_criteria","criteria","_short","short","initial","updated","nodes","length","Error","a","i","n","polygon","b","area","c","x","y","k","lexicographicOrder","computeUpperHullIndexes","points","indexes","size","cross","slice","sortedPoints","Array","flippedPoints","sort","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","push","x1","y1","p","point","x0","y0","inside","xa","ya","xb","yb","perimeter","Math","sqrt","isCriteria","object","__importStar","this","mod","__esModule","result","hasOwnProperty","call","__importDefault","relative_standard_deviation_delaunay_1","ratio_1","EdgeBased","Ratio","default","RelativeStandardDeviationDelaunay","RelativeStandardDeviation","EdgeBasedRelativeStandardDeviationCriteria","lodash_1","agora_graph_1","utils_1","delta","edges","r","meanR","meanBy","sumBy","e","pow","edgeLength","initialGraph","updatedGraph","withDelaunay","initialNodes","updatedNodes","initialSorted","sortBy","updatedSorted","initLength","norm","source","target","delaunayEdges","delaunay","console","log","round","EdgeBasedRelativeStandardDeviationDelaunayCriteria","calculateEdgeRatio","graph","min","max","_i","edge","u","v","norm_uv","undefined","edgeRatioLen","ratioOfInitial","ratioOfUpdated","EdgeBasedRatioCriteria","aspect_ratio_1","improved_aspect_ratio_1","convex_hull_standard_deviation_1","GlobalShape","BoundingBox","AspectRatio","ImprovedAspectRatio","ConvexHull","StandardDeviation","aspectRatio","w","right","left","h","bottom","top","wp","hp","GlobalShapeBoundingBoxAspectRatioCriteria","improvedAspectRatio","initialSize","updatedSize","GlobalShapeBoundingBoxImprovedAspectRatioCriteria","d3","_","calculateConvexHullDistances","center","polygonCentroid","centeredHull","map","pos","rays","angle","theta","PI","lines","elements","sorted","start","end","lastEl","buffer","getLines","toPolar","distances","forEach","ray","line","lines_1","getIntersectingLine","cartesianRay","toCartesian","intersection","line1","line2","denominator","numerator1","numerator2","lineIntersection","magnitude","convertNodes","flatMap","t","l","shapePreservation","initialHull","polygonHull","updatedHull","error","initialDistances","updatedDistances","d","mean_d","mean","d_a","GlobalShapeConvexHullStandardDeviationCriteria","normalized_euclidean_1","hamiltonian_1","squared_euclidean_1","improved_mean_squared_euclidean_1","moved_nodes_1","mean_euclidean_1","k_nearest_neighbors_1","NodeMovement","DistanceMoved","Hamiltonian","ImprovedMeanSquaredEuclidean","NormalizedEuclidean","MeanEuclidean","SquaredEuclidean","MovedNodes","KNearestNeighbors","setK","createKNearestNeighborsCriteria","distancesMoved","sum","u_index","u_prime","SQRT2","NodeMovementDistanceMovedNormalizedEuclideanCriteria","costFunction","normX","normY","NodeMovementDistanceMovedHamiltonianCriteria","phiChange","NodeMovementDistanceMovedEuclideanSquareCriteria","getScale","getCenter","orientation","minBy","maxBy","getSpan","scaleChange","nodesLength","scale","initialCenteredNodes","positionFromCenter","updatedCenteredNodes","reduce","_b","displacement","index","projected","up","find","diff","center_x","center_y","NodeMovementDistanceMovedImprovedMeanSquaredEuclideanCriteria","lambda1","nb","NodeMovementMovedNodesCriteria","euclideanDistance","change","node","upNode","NodeMovementDistanceMovedMeanEuclideanCriteria","kNearestNeighbors","options","n_k","filter","initialNode","updatedNode","NodeMovement8NearestNeighborsCriteria","original_1","number_of_inversions_1","normalized_number_of_inversions_1","kendall_tau_distance_1","OrthogonalOrdering","Original","NumberInversions","NormalizedNumberInversions","KendallTauDistance","orthogonalOrdering","v_index","v_prime","OrthogonalOrderingCriteria","numberOfInversions","OrthogonalOrderingNumberInversionsCriteria","normalizedNumberOfInversions","OrthogonalOrderingNormalizedNumberInversionsCriteria","iv","lambda2","OrthogonalOrderingKendallTauDistanceCriteria","area_1","normalized_area_1","l1_metric_length_1","convex_hull_area_1","Spread","Area","NormalizedArea","L1MetricLength","SpreadBoundingBoxAreaCriteria","lambda3","SpreadBoundingBoxNormalizedAreaCriteria","l1MetricLength","initialResult","updatedResult","SpreadBoundingBoxL1MetricLengthCriteria","d3_polygon_1","sizeIncrease","initialArea","polygonArea","updatedArea","SpreadConvexHullAreaCriteria","__assign","assign","s","arguments","prototype","apply","interfaces_1","edge_based_1","global_shape_1","node_movement_1","orthogonal_ordering_1","spread_1","manager","criterias","add","_this","delete","batch","updatedGraphs","list","keys","results","execute","Date","evaluate","getTime","time"],"mappings":"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","file":"static/js/6.3e36b24b.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction criteriaWrap(_a) {\n  var name = _a.name,\n      _criteria = _a.criteria,\n      _short = _a.short;\n  return {\n    name: name,\n    short: _short,\n    criteria: function criteria(initial, updated) {\n      if (initial.nodes.length !== updated.nodes.length) {\n        //* ignoring console because it's captured by the exception\n\n        /*\r\n        console.error(\r\n        'criteria', // family\r\n        criteria.short, // type\r\n        'abording', // action\r\n        'not the same number of nodes' // reason\r\n        ); */\n        throw Error(\"Criteria \" + (_short ? _short : name) + \" abording : not same number of nodes\");\n      }\n\n      return _criteria(initial, updated);\n    }\n  };\n}\n\nexports.criteriaWrap = criteriaWrap;","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function (a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n} // Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\n\n\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {\n      --size;\n    }\n\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function (points) {\n  if ((n = points.length) < 3) return null;\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) {\n    sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  }\n\n  sortedPoints.sort(lexicographicOrder);\n\n  for (i = 0; i < n; ++i) {\n    flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n  }\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.\n\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = []; // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n\n  for (i = upperIndexes.length - 1; i >= 0; --i) {\n    hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  }\n\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {\n    hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n  }\n\n  return hull;\n}","export default function (polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0],\n      y = point[1],\n      x0 = p[0],\n      y0 = p[1],\n      x1,\n      y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}","export { default as polygonArea } from \"./area\";\nexport { default as polygonCentroid } from \"./centroid\";\nexport { default as polygonHull } from \"./hull\";\nexport { default as polygonContains } from \"./contains\";\nexport { default as polygonLength } from \"./length\";","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction isCriteria(object) {\n  return object.criteria !== void 0;\n}\n\nexports.isCriteria = isCriteria;","\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar relative_standard_deviation_delaunay_1 = __importStar(require(\"./relative-standard-deviation-delaunay\"));\n\nvar ratio_1 = __importDefault(require(\"./ratio\"));\n\nexports.EdgeBased = {\n  Ratio: ratio_1.default,\n  RelativeStandardDeviationDelaunay: relative_standard_deviation_delaunay_1.default,\n  RelativeStandardDeviation: relative_standard_deviation_delaunay_1.EdgeBasedRelativeStandardDeviationCriteria\n};\nexports.default = exports.EdgeBased;","'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n};\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require('lodash'));\n\nvar agora_graph_1 = require('agora-graph');\n\nvar utils_1 = require('../utils');\n/**\r\n * TODO: GH10\r\n *\r\n * reference:  https://gitlab.com/graphviz/graphviz/blob/master/lib/sfdpgen/layout_similarity.c#L161-180\r\n * permalink reference : https://gitlab.com/graphviz/graphviz/blob/b0871968de2252653b001bf700ed98c240e8aad6/lib/sfdpgen/layout_similarity.c#L161-180\r\n *\r\n * Evaluates the updatedGraph\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.edgeLength = function (initialGraph, updatedGraph, withDelaunay) {\n  if (withDelaunay === void 0) {\n    withDelaunay = true;\n  }\n\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var initialSorted = lodash_1.default.sortBy(initialNodes, 'index');\n  var updatedSorted = lodash_1.default.sortBy(updatedNodes, 'index');\n\n  var r = function r(e) {\n    var initLength = agora_graph_1.norm(initialSorted[e.source], initialSorted[e.target]);\n    var uLength = agora_graph_1.norm(updatedSorted[e.source], updatedSorted[e.target]);\n    return uLength / initLength;\n  };\n  /* not used and supposedly wrong\r\n    const r_prime = (e: Edge) => {\r\n      const initLength = norm(initialSorted[e.source], initialSorted[e.target]);\r\n      const uLength = norm(updatedSorted[e.source], updatedSorted[e.target]);\r\n      return initLength / uLength;\r\n    }; */\n\n\n  if (withDelaunay) {\n    var delaunayEdges = agora_graph_1.delaunay(initialNodes);\n    console.log(delta(delaunayEdges, r));\n    return {\n      value: agora_graph_1.round(delta(delaunayEdges, r), -6)\n    };\n    /* this is how it should be done, but it is unclear about how do we manage r_prime calculation\r\n        const delaunayEdgesPrime = delaunay(updatedNodes);\r\n        return {\r\n          value: round(\r\n            (delta(delaunayEdges, r) + delta(delaunayEdgesPrime, r_prime)) / 2,\r\n            -6\r\n          )\r\n        }; */\n  }\n\n  console.log(delta(initialGraph.edges, r));\n  return {\n    value: agora_graph_1.round(delta(initialGraph.edges, r), -6)\n  };\n};\n\nfunction delta(edges, r) {\n  var meanR = lodash_1.default.meanBy(edges, r);\n  return Math.sqrt(lodash_1.default.sumBy(edges, function (e) {\n    return Math.pow(r(e) - meanR, 2);\n  }) / edges.length) / meanR;\n}\n\nexports.EdgeBasedRelativeStandardDeviationDelaunayCriteria = utils_1.criteriaWrap({\n  criteria: function criteria(initial, updated) {\n    return exports.edgeLength(initial, updated, true);\n  },\n  name: 'edge-based/relative-standard-deviation/delaunay',\n  short: 'e_rsdd'\n});\n/**\r\n * @deprecated\r\n */\n\nexports.EdgeBasedRelativeStandardDeviationCriteria = utils_1.criteriaWrap({\n  criteria: function criteria(initial, updated) {\n    return exports.edgeLength(initial, updated, false);\n  },\n  name: 'edge-based/relative-standard-deviation',\n  short: 'e_rsd'\n});\nexports.default = exports.EdgeBasedRelativeStandardDeviationDelaunayCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../utils\"); // TODO: LEN05\n\n\nexports.edgeRatioLen = function (initial, updated) {\n  var ratioOfInitial = calculateEdgeRatio(initial);\n  var ratioOfUpdated = calculateEdgeRatio(updated);\n  return {\n    value: ratioOfUpdated / ratioOfInitial,\n    initial: ratioOfInitial,\n    updated: ratioOfUpdated\n  };\n};\n\nfunction calculateEdgeRatio(graph) {\n  var min, max;\n\n  for (var _i = 0, _a = graph.edges; _i < _a.length; _i++) {\n    var edge = _a[_i];\n    var u = graph.nodes[edge.source];\n    var v = graph.nodes[edge.target];\n    var norm_uv = agora_graph_1.norm(u, v);\n    if (norm_uv === 0) continue;\n    if (min === undefined || min > norm_uv) min = norm_uv;\n    if (max === undefined || max < norm_uv) max = norm_uv;\n  }\n\n  if (max == undefined || min == undefined) throw Error('could not evaluate edge-based/ratio');\n  return max / min;\n}\n\nexports.EdgeBasedRatioCriteria = utils_1.criteriaWrap({\n  criteria: exports.edgeRatioLen,\n  name: 'edge-based/ratio',\n  short: 'eb_r'\n});\nexports.default = exports.EdgeBasedRatioCriteria;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar aspect_ratio_1 = __importDefault(require(\"./bounding-box/aspect-ratio\"));\n\nvar improved_aspect_ratio_1 = __importDefault(require(\"./bounding-box/improved-aspect-ratio\"));\n\nvar convex_hull_standard_deviation_1 = __importDefault(require(\"./convex-hull_standard-deviation\"));\n\nexports.GlobalShape = {\n  BoundingBox: {\n    AspectRatio: aspect_ratio_1.default,\n    ImprovedAspectRatio: improved_aspect_ratio_1.default\n  },\n  ConvexHull: {\n    StandardDeviation: convex_hull_standard_deviation_1.default\n  }\n};\nexports.default = exports.GlobalShape;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO: LEN05\r\n * Evaluates the updatedGraph\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.aspectRatio = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var w = agora_graph_1.right(agora_graph_1.right(initialNodes)) - agora_graph_1.left(agora_graph_1.left(initialNodes));\n  var h = agora_graph_1.bottom(agora_graph_1.bottom(initialNodes)) - agora_graph_1.top(agora_graph_1.top(initialNodes));\n  var wp = agora_graph_1.right(agora_graph_1.right(updatedNodes)) - agora_graph_1.left(agora_graph_1.left(updatedNodes));\n  var hp = agora_graph_1.bottom(agora_graph_1.bottom(updatedNodes)) - agora_graph_1.top(agora_graph_1.top(updatedNodes));\n  return {\n    value: wp > hp ? wp * h / (hp * w) : hp * w / (wp * h)\n  };\n};\n\nexports.GlobalShapeBoundingBoxAspectRatioCriteria = utils_1.criteriaWrap({\n  criteria: exports.aspectRatio,\n  name: 'global-shape/bounding-box/aspect-ratio',\n  short: 'gs_bb_ar'\n});\nexports.default = exports.GlobalShapeBoundingBoxAspectRatioCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * checks how the aspect ratio has changed\r\n * @param initial\r\n * @param updated\r\n */\n\n\nexports.improvedAspectRatio = function (initial, updated) {\n  var initialSize = [agora_graph_1.round(agora_graph_1.bottom(agora_graph_1.bottom(initial.nodes)) - agora_graph_1.top(agora_graph_1.top(initial.nodes))), agora_graph_1.round(agora_graph_1.right(agora_graph_1.right(initial.nodes)) - agora_graph_1.left(agora_graph_1.left(initial.nodes)))],\n      updatedSize = [agora_graph_1.round(agora_graph_1.bottom(agora_graph_1.bottom(updated.nodes)) - agora_graph_1.top(agora_graph_1.top(updated.nodes))), agora_graph_1.round(agora_graph_1.right(agora_graph_1.right(updated.nodes)) - agora_graph_1.left(agora_graph_1.left(updated.nodes)))];\n  return {\n    value: Math.max(initialSize[1] * updatedSize[0] / (initialSize[0] * updatedSize[1]), initialSize[0] * updatedSize[1] / (initialSize[1] * updatedSize[0])),\n    updated: updatedSize,\n    initial: initialSize\n  };\n};\n\nexports.GlobalShapeBoundingBoxImprovedAspectRatioCriteria = utils_1.criteriaWrap({\n  criteria: exports.improvedAspectRatio,\n  name: 'global-shape/bounding-box/improved-aspect-ratio',\n  short: 'gs_bb_iar'\n});\nexports.default = exports.GlobalShapeBoundingBoxImprovedAspectRatioCriteria;","\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar d3 = __importStar(require(\"d3-polygon\"));\n\nvar _ = __importStar(require(\"lodash\"));\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * TODO: SSS12\r\n */\n\n\nexports.shapePreservation = function (initial, updated) {\n  // STEP 1 : retrieve convex hull\n  var initialHull = d3.polygonHull(convertNodes(initial.nodes));\n  var updatedHull = d3.polygonHull(convertNodes(updated.nodes)); // STEP 1.1 : check for errors\n\n  if (initialHull === null || updatedHull === null) return {\n    value: -1,\n    error: 'could not compute initial or updated convex hull'\n  }; // DO STEP 2-3-4-5\n\n  var initialDistances = calculateConvexHullDistances(initialHull);\n  var updatedDistances = calculateConvexHullDistances(updatedHull);\n  var d = [];\n\n  for (var i = 0; i < initialDistances.length; i++) {\n    d.push(updatedDistances[i] / initialDistances[i]);\n  }\n\n  var mean_d = _.mean(d);\n\n  var value = _.sumBy(d, function (d_a) {\n    return Math.pow(d_a - mean_d, 2);\n  });\n\n  return {\n    value: value,\n    initial: initialDistances,\n    updated: updatedDistances\n  };\n};\n\nfunction calculateConvexHullDistances(hull) {\n  // STEP 2 get center of the hull and set as center\n  var center = d3.polygonCentroid(hull);\n\n  var centeredHull = _.map(hull, function (pos) {\n    return [pos[0] - center[0], pos[1] - center[1]];\n  }); // STEP 3 create radian lines from center each 10 degrees.\n\n\n  var rays = [];\n\n  for (var angle = 0; angle < 360; angle += 10) {\n    rays.push({\n      angle: angle,\n      length: 1,\n      theta: agora_graph_1.round(angle * (Math.PI / 180), -14)\n    });\n  } // STEP 4 convert point of the hull to polar coordinates (to know which line do i need to raytrace)\n\n\n  var elements = _.map(centeredHull, function (pos) {\n    return [pos, agora_graph_1.toPolar({\n      x: pos[0],\n      y: pos[1]\n    })];\n  });\n\n  var lines = getLines(elements);\n  var distances = [];\n\n  _.forEach(rays, function (ray) {\n    var line = getIntersectingLine(lines, ray);\n    var cartesianRay = agora_graph_1.toCartesian(ray);\n    var intersection = lineIntersection({\n      start: [0, 0],\n      end: [cartesianRay.x, cartesianRay.y]\n    }, {\n      start: line.start[0],\n      end: line.end[0]\n    });\n    if (intersection) distances.push(agora_graph_1.magnitude(intersection));else throw Error('it is supposed to intersect :(');\n  });\n\n  return distances;\n}\n\nexports.calculateConvexHullDistances = calculateConvexHullDistances;\n\nfunction getIntersectingLine(lines, ray) {\n  for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {\n    var line = lines_1[_i];\n    if (line.start[1] <= ray.angle && line.end[1] > ray.angle) return line;\n  } // should never be in this case\n\n\n  throw Error('Unreachable error, how did you manage to get here');\n  return lines[0];\n}\n\nfunction getLines(elements) {\n  var sorted = _.sortBy(elements, function (a) {\n    return a[1].angle;\n  });\n\n  if (sorted.length === 0) {\n    return [];\n  }\n\n  if (sorted.length === 1) {\n    return [{\n      start: [sorted[0][0], sorted[0][1].angle],\n      end: [sorted[0][0], sorted[0][1].angle + 360]\n    }];\n  }\n\n  var lastEl = sorted[sorted.length - 1];\n  var buffer = sorted[0];\n  var lines = [{\n    start: [lastEl[0], lastEl[1].angle - 360],\n    end: [buffer[0], buffer[1].angle]\n  }];\n\n  for (var i = 1; i < sorted.length; i++) {\n    lines.push({\n      start: [buffer[0], buffer[1].angle],\n      end: [sorted[i][0], sorted[i][1].angle]\n    });\n    buffer = sorted[i];\n  }\n\n  lines.push({\n    start: [buffer[0], buffer[1].angle],\n    end: [sorted[0][0], sorted[0][1].angle + 360]\n  });\n  return lines;\n}\n\nfunction lineIntersection(line1, line2) {\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite)\n  var denominator = (line2.end[1] - line2.start[1]) * (line1.end[0] - line1.start[0]) - (line2.end[0] - line2.start[0]) * (line1.end[1] - line1.start[1]);\n\n  if (denominator == 0) {\n    return null;\n  }\n\n  var a = line1.start[1] - line2.start[1];\n  var b = line1.start[0] - line2.start[0];\n  var numerator1 = (line2.end[0] - line2.start[0]) * a - (line2.end[1] - line2.start[1]) * b;\n  var numerator2 = (line1.end[0] - line1.start[0]) * a - (line1.end[1] - line1.start[1]) * b;\n  a = numerator1 / denominator;\n  b = numerator2 / denominator; // if we cast these lines infinitely in both directions, they intersect here:\n\n  return {\n    x: line1.start[0] + a * (line1.end[0] - line1.start[0]),\n    y: line1.start[1] + a * (line1.end[1] - line1.start[1])\n  };\n}\n\nfunction convertNodes(nodes) {\n  // TODO: add node boxes\n  return _.flatMap(nodes, function (n) {\n    var t = agora_graph_1.top(n),\n        l = agora_graph_1.left(n),\n        r = agora_graph_1.right(n),\n        b = agora_graph_1.bottom(n);\n    return [[l, t], [r, t], [r, b], [l, b]];\n  });\n}\n\nexports.GlobalShapeConvexHullStandardDeviationCriteria = utils_1.criteriaWrap({\n  criteria: exports.shapePreservation,\n  name: 'global-shape/convex-hull/standard-deviation',\n  short: 'gs_ch_sd'\n});\nexports.default = exports.GlobalShapeConvexHullStandardDeviationCriteria;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar normalized_euclidean_1 = __importDefault(require(\"./distance-moved/normalized-euclidean\"));\n\nvar hamiltonian_1 = __importDefault(require(\"./distance-moved/hamiltonian\"));\n\nvar squared_euclidean_1 = __importDefault(require(\"./distance-moved/squared-euclidean\"));\n\nvar improved_mean_squared_euclidean_1 = __importDefault(require(\"./distance-moved/improved-mean-squared-euclidean\"));\n\nvar moved_nodes_1 = __importDefault(require(\"./moved-nodes\"));\n\nvar mean_euclidean_1 = __importDefault(require(\"./distance-moved/mean-euclidean\"));\n\nvar k_nearest_neighbors_1 = __importStar(require(\"./k-nearest-neighbors\"));\n\nexports.NodeMovement = {\n  DistanceMoved: {\n    Hamiltonian: hamiltonian_1.default,\n    ImprovedMeanSquaredEuclidean: improved_mean_squared_euclidean_1.default,\n    NormalizedEuclidean: normalized_euclidean_1.default,\n    MeanEuclidean: mean_euclidean_1.default,\n    SquaredEuclidean: squared_euclidean_1.default\n  },\n  MovedNodes: moved_nodes_1.default,\n  KNearestNeighbors: {\n    default: k_nearest_neighbors_1.default,\n    setK: k_nearest_neighbors_1.createKNearestNeighborsCriteria\n  }\n};\nexports.default = exports.NodeMovement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO: LMR98\r\n * Evaluates the updatedGraph\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.distancesMoved = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var n = initialNodes.length;\n  var sum = 0;\n\n  for (var u_index = 0; u_index < initialNodes.length; u_index++) {\n    var u = initialNodes[u_index];\n    var u_prime = updatedNodes[u_index];\n    sum += agora_graph_1.norm(u_prime, u);\n  }\n\n  var w = agora_graph_1.right(agora_graph_1.right(initialNodes)) - agora_graph_1.left(agora_graph_1.left(initialNodes));\n  var h = agora_graph_1.bottom(agora_graph_1.bottom(initialNodes)) - agora_graph_1.top(agora_graph_1.top(initialNodes));\n  var wp = agora_graph_1.right(agora_graph_1.right(updatedNodes)) - agora_graph_1.left(agora_graph_1.left(updatedNodes));\n  var hp = agora_graph_1.bottom(agora_graph_1.bottom(updatedNodes)) - agora_graph_1.top(agora_graph_1.top(updatedNodes));\n  var k = Math.max(w, h, wp, hp);\n  return {\n    value: sum / (k * Math.SQRT2 * n)\n  };\n};\n\nexports.NodeMovementDistanceMovedNormalizedEuclideanCriteria = utils_1.criteriaWrap({\n  criteria: exports.distancesMoved,\n  name: 'node-movement/distance-moved/normalized-euclidean',\n  short: 'nm_dm_ne'\n});\nexports.default = exports.NodeMovementDistanceMovedNormalizedEuclideanCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO: HL03, HLSG07\r\n * Evaluates the updatedGraph\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.costFunction = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var sum = 0;\n\n  for (var u_index = 0; u_index < initialNodes.length; u_index++) {\n    var u = initialNodes[u_index];\n    var u_prime = updatedNodes[u_index];\n    sum += agora_graph_1.normX(u_prime, u) + agora_graph_1.normY(u_prime, u);\n  }\n\n  return {\n    value: sum\n  };\n};\n\nexports.NodeMovementDistanceMovedHamiltonianCriteria = utils_1.criteriaWrap({\n  criteria: exports.costFunction,\n  name: 'node-movement/distance-moved/hamiltonian',\n  short: 'nm_dm_h'\n});\nexports.default = exports.NodeMovementDistanceMovedHamiltonianCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO: MSTH03\r\n * Evaluates the updatedGraph\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.phiChange = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var sum = 0;\n\n  for (var u_index = 0; u_index < initialNodes.length; u_index++) {\n    var u = initialNodes[u_index];\n    var u_prime = updatedNodes[u_index];\n    sum += Math.pow(agora_graph_1.normX(u_prime, u), 2) + Math.pow(agora_graph_1.normY(u_prime, u), 2);\n  }\n\n  return {\n    value: sum\n  };\n};\n\nexports.NodeMovementDistanceMovedEuclideanSquareCriteria = utils_1.criteriaWrap({\n  criteria: exports.phiChange,\n  name: 'node-movement/distance-moved/squared-euclidean',\n  short: 'nm_dm_se'\n});\nexports.default = exports.NodeMovementDistanceMovedEuclideanSquareCriteria;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * scale to transform a to b\r\n * @param a first value\r\n * @param b second value\r\n */\n\n\nvar getScale = function getScale(a, b) {\n  return b / a;\n};\n\nfunction getCenter(nodes, orientation) {\n  var min = lodash_1.default.minBy(nodes, orientation);\n  var max = lodash_1.default.maxBy(nodes, orientation);\n\n  if (!min || !max) {\n    throw Error(\"Criteria nm_dm_imse getCenter error either: \" + min + \" or \" + max);\n  }\n\n  return max[orientation] / 2 + min[orientation] / 2;\n}\n\nfunction getSpan(nodes, orientation) {\n  var min = lodash_1.default.minBy(nodes, orientation);\n  var max = lodash_1.default.maxBy(nodes, orientation);\n\n  if (!min || !max) {\n    throw Error(\"Criteria nm_dm_imse getSpan error either: \" + min + \" or \" + max);\n  }\n\n  return max[orientation] - min[orientation];\n}\n\nfunction scaleChange(initial, updated) {\n  var nodesLength = initial.nodes.length;\n  var scale = {\n    x: getScale(getSpan(initial.nodes, 'x'), getSpan(updated.nodes, 'x')),\n    y: getScale(getSpan(initial.nodes, 'y'), getSpan(updated.nodes, 'y'))\n  };\n  var initialCenteredNodes = lodash_1.default.sortBy(positionFromCenter(initial.nodes), 'index');\n  var updatedCenteredNodes = lodash_1.default.sortBy(positionFromCenter(updated.nodes), 'index');\n  return lodash_1.default.reduce(initialCenteredNodes, function (_a, _b) {\n    var value = _a.value,\n        displacement = _a.displacement;\n    var x = _b.x,\n        y = _b.y,\n        index = _b.index;\n    var projected = {\n      x: agora_graph_1.round(x * scale.x, -9),\n      y: agora_graph_1.round(y * scale.y, -9)\n    };\n    var up = lodash_1.default.find(updatedCenteredNodes, ['index', index]);\n    if (!up) throw Error(\"Criteria nm_dm_imse : index \" + index + \" does not exist in updated\");\n    var diff = agora_graph_1.norm(projected, up);\n    value += diff * diff / nodesLength;\n    displacement.push(diff);\n    return {\n      value: value,\n      displacement: displacement\n    };\n  }, {\n    value: 0,\n    displacement: []\n  });\n}\n\nexports.scaleChange = scaleChange;\n\nfunction positionFromCenter(nodes) {\n  var center_x = getCenter(nodes, 'x');\n  var center_y = getCenter(nodes, 'y');\n  return lodash_1.default.map(nodes, function (_a) {\n    var index = _a.index,\n        x = _a.x,\n        y = _a.y;\n    return {\n      index: index,\n      x: x - center_x,\n      y: y - center_y\n    };\n  });\n}\n\nexports.NodeMovementDistanceMovedImprovedMeanSquaredEuclideanCriteria = utils_1.criteriaWrap({\n  criteria: scaleChange,\n  name: 'node-movement/distance-moved/improved-mean-squared-euclidean',\n  short: 'nm_dm_imse'\n});\nexports.default = exports.NodeMovementDistanceMovedImprovedMeanSquaredEuclideanCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * TODO: HLGS07\r\n * Evaluates the updatedGraph\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.lambda1 = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var n = initialNodes.length;\n  var nb = 0;\n\n  for (var u_index = 0; u_index < initialNodes.length; u_index++) {\n    var u = initialNodes[u_index];\n    var u_prime = updatedNodes[u_index];\n    if (u.x !== u_prime.x || u.y !== u_prime.y) nb++;\n  }\n\n  return {\n    value: nb / n\n  };\n};\n\nexports.NodeMovementMovedNodesCriteria = utils_1.criteriaWrap({\n  criteria: exports.lambda1,\n  name: 'node-movement/moved-nodes',\n  short: 'nm_mn'\n});\nexports.default = exports.NodeMovementMovedNodesCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO: SSS*12\r\n * Evaluates the updatedGraph using the Change criteria\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n *\r\n * @returns {{value: number, displacement: Edge[]}}\r\n */\n\n\nexports.euclideanDistance = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var nodesLength = initialNodes.length;\n  var change = 0;\n  var displacement = [];\n\n  for (var index = 0; index < nodesLength; index++) {\n    var node = initialNodes[index];\n    var upNode = updatedNodes[index];\n    var diff = agora_graph_1.norm(node, upNode);\n    change += diff;\n\n    if (diff !== 0) {\n      displacement.push({\n        source: {\n          x: node.x,\n          y: node.y\n        },\n        target: {\n          x: upNode.x,\n          y: upNode.y\n        }\n      });\n    }\n  }\n\n  return {\n    value: change / nodesLength,\n    displacement: displacement\n  };\n};\n\nexports.NodeMovementDistanceMovedMeanEuclideanCriteria = utils_1.criteriaWrap({\n  criteria: exports.euclideanDistance,\n  name: 'node-movement/distance-moved/mean-euclidean',\n  short: 'nm_dm_me'\n});\nexports.default = exports.NodeMovementDistanceMovedMeanEuclideanCriteria;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * TODO: NNB*16\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n *\r\n * @returns {{value: number, displacement: Edge[]}}\r\n */\n\n\nexports.kNearestNeighbors = function (initialGraph, updatedGraph, options) {\n  var k = options.k;\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var nodesLength = initialNodes.length;\n  var n_k = n(k);\n  var value = 0;\n\n  for (var i = 0; i < nodesLength; i++) {\n    var initialNode = initialNodes[i];\n    var updatedNode = updatedNodes[i];\n    value += Math.pow(k - lodash_1.default.intersection(n_k(initialNodes, initialNode), n_k(updatedNodes, updatedNode)).length, 2);\n  }\n\n  return {\n    value: value\n  };\n};\n\nfunction n(k) {\n  return function (nodes, node) {\n    return lodash_1.default.sortBy(nodes, function (n) {\n      return agora_graph_1.norm(node, n);\n    }).filter(function (n) {\n      return n.index != node.index;\n    }).slice(0, k).map(function (n) {\n      return n.index;\n    });\n  };\n}\n\nfunction createKNearestNeighborsCriteria(k) {\n  if (k === void 0) {\n    k = 8;\n  }\n\n  return utils_1.criteriaWrap({\n    criteria: function criteria(initial, updated) {\n      return exports.kNearestNeighbors(initial, updated, {\n        k: k\n      });\n    },\n    name: 'node-movement/' + k + '-nearest-neighbors',\n    short: 'nm_' + k + 'nn'\n  });\n}\n\nexports.createKNearestNeighborsCriteria = createKNearestNeighborsCriteria;\nexports.NodeMovement8NearestNeighborsCriteria = createKNearestNeighborsCriteria();\nexports.default = exports.NodeMovement8NearestNeighborsCriteria;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar original_1 = __importDefault(require(\"./original\"));\n\nvar number_of_inversions_1 = __importDefault(require(\"./number-of-inversions\"));\n\nvar normalized_number_of_inversions_1 = __importDefault(require(\"./normalized-number-of-inversions\"));\n\nvar kendall_tau_distance_1 = __importDefault(require(\"./kendall-tau-distance\"));\n\nexports.OrthogonalOrdering = {\n  Original: original_1.default,\n  NumberInversions: number_of_inversions_1.default,\n  NormalizedNumberInversions: normalized_number_of_inversions_1.default,\n  KendallTauDistance: kendall_tau_distance_1.default\n};\nexports.default = exports.OrthogonalOrdering;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\"); //TODO: MELS 95\n\n\nexports.orthogonalOrdering = function (initialGraph, updatedGraph) {\n  for (var u_index = 0; u_index < initialGraph.nodes.length; u_index++) {\n    var u = initialGraph.nodes[u_index];\n    var u_prime = updatedGraph.nodes[u_index];\n\n    for (var v_index = 0; v_index < initialGraph.nodes.length; v_index++) {\n      var v = initialGraph.nodes[v_index];\n      var v_prime = updatedGraph.nodes[v_index];\n      if (u.x < v.x !== u_prime.x < v_prime.x || u.y < v.y !== u_prime.y < v_prime.y || u.x === v.x !== (u_prime.x === v_prime.x) || u.y === v.y !== (u_prime.y === v_prime.y)) return {\n        value: 0\n      };\n    }\n  }\n\n  return {\n    value: 1\n  };\n};\n\nexports.OrthogonalOrderingCriteria = utils_1.criteriaWrap({\n  criteria: exports.orthogonalOrdering,\n  name: 'orthogonal-ordering/original',\n  short: 'oo_o'\n});\nexports.default = exports.OrthogonalOrderingCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * TODO: SSS*12\r\n * Evaluates the updatedGraph using the orthogonal ordering criteria\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.numberOfInversions = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var sum = 0;\n\n  for (var u_index = 0; u_index < initialNodes.length; u_index++) {\n    var u = initialNodes[u_index];\n    var u_prime = updatedNodes[u_index];\n\n    for (var v_index = 0; v_index < initialNodes.length; v_index++) {\n      var v = initialNodes[v_index];\n      var v_prime = updatedNodes[v_index];\n      if (u.x > v.x && u_prime.x < v_prime.x) sum++;\n      if (u.y > v.y && u_prime.y < v_prime.y) sum++;\n    }\n  }\n\n  return {\n    value: sum\n  };\n};\n\nexports.OrthogonalOrderingNumberInversionsCriteria = utils_1.criteriaWrap({\n  criteria: exports.numberOfInversions,\n  name: 'orthogonal-ordering/number-of-inversions',\n  short: 'oo_ni'\n});\nexports.default = exports.OrthogonalOrderingNumberInversionsCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * TODO : US\r\n * Evaluates the updatedGraph using the orthogonal ordering criteria\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.normalizedNumberOfInversions = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var sum = 0;\n\n  for (var u_index = 0; u_index < initialNodes.length; u_index++) {\n    var u = initialNodes[u_index];\n    var u_prime = updatedNodes[u_index];\n\n    for (var v_index = 0; v_index < initialNodes.length; v_index++) {\n      var v = initialNodes[v_index];\n      var v_prime = updatedNodes[v_index];\n      if (u.x > v.x && u_prime.x < v_prime.x) sum++;\n      if (u.y > v.y && u_prime.y < v_prime.y) sum++;\n    }\n  }\n\n  return {\n    value: sum / (initialNodes.length * (initialNodes.length - 1))\n  };\n};\n\nexports.OrthogonalOrderingNormalizedNumberInversionsCriteria = utils_1.criteriaWrap({\n  criteria: exports.normalizedNumberOfInversions,\n  name: 'orthogonal-ordering/normalized-number-of-inversions',\n  short: 'oo_nni'\n});\nexports.default = exports.OrthogonalOrderingNormalizedNumberInversionsCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * TODO: HLGS 07\r\n * Evaluates the updatedGraph using the orthogonal ordering criteria\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.lambda2 = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var n = initialNodes.length;\n  var sum = 0;\n\n  for (var u_index = 0; u_index < initialNodes.length; u_index++) {\n    var u = initialNodes[u_index];\n    var u_prime = updatedNodes[u_index];\n\n    for (var v_index = 0; v_index < initialNodes.length; v_index++) {\n      var v = initialNodes[v_index];\n      var v_prime = updatedNodes[v_index];\n      if (iv(u, v, u_prime, v_prime)) sum++;\n    }\n  }\n\n  return {\n    value: sum / (n * (n - 1))\n  };\n};\n\nfunction iv(u, v, u_prime, v_prime) {\n  return agora_graph_1.left(u) > agora_graph_1.left(v) && agora_graph_1.left(u_prime) < agora_graph_1.left(v_prime) || agora_graph_1.left(u) < agora_graph_1.left(v) && agora_graph_1.left(u_prime) > agora_graph_1.left(v_prime) || agora_graph_1.top(u) > agora_graph_1.top(v) && agora_graph_1.top(u_prime) < agora_graph_1.top(v_prime) || agora_graph_1.top(u) < agora_graph_1.top(v) && agora_graph_1.top(u_prime) > agora_graph_1.top(v_prime);\n}\n\nexports.OrthogonalOrderingKendallTauDistanceCriteria = utils_1.criteriaWrap({\n  criteria: exports.lambda2,\n  name: 'orthogonal-ordering/kendall-tau-distance',\n  short: 'oo_ktd'\n});\nexports.default = exports.OrthogonalOrderingKendallTauDistanceCriteria;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar area_1 = __importDefault(require(\"./bounding-box/area\"));\n\nvar normalized_area_1 = __importDefault(require(\"./bounding-box/normalized-area\"));\n\nvar l1_metric_length_1 = __importDefault(require(\"./bounding-box/l1-metric-length\"));\n\nvar convex_hull_area_1 = __importDefault(require(\"./convex-hull_area\"));\n\nexports.Spread = {\n  BoundingBox: {\n    Area: area_1.default,\n    NormalizedArea: normalized_area_1.default,\n    L1MetricLength: l1_metric_length_1.default\n  },\n  ConvexHull: {\n    Area: convex_hull_area_1.default\n  }\n};\nexports.default = exports.Spread;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO: MELS95\r\n * Evaluates the updatedGraph\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.area = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var w = agora_graph_1.right(agora_graph_1.right(initialNodes)) - agora_graph_1.left(agora_graph_1.left(initialNodes));\n  var h = agora_graph_1.bottom(agora_graph_1.bottom(initialNodes)) - agora_graph_1.top(agora_graph_1.top(initialNodes));\n  var wp = agora_graph_1.right(agora_graph_1.right(updatedNodes)) - agora_graph_1.left(agora_graph_1.left(updatedNodes));\n  var hp = agora_graph_1.bottom(agora_graph_1.bottom(updatedNodes)) - agora_graph_1.top(agora_graph_1.top(updatedNodes));\n  return {\n    value: wp * hp / (w * h)\n  };\n};\n\nexports.SpreadBoundingBoxAreaCriteria = utils_1.criteriaWrap({\n  criteria: exports.area,\n  name: 'spread/bounding-box/area',\n  short: 'sp_bb_a'\n});\nexports.default = exports.SpreadBoundingBoxAreaCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO: HLSG07\r\n * Evaluates the updatedGraph\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.lambda3 = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var w = agora_graph_1.right(agora_graph_1.right(initialNodes)) - agora_graph_1.left(agora_graph_1.left(initialNodes));\n  var h = agora_graph_1.bottom(agora_graph_1.bottom(initialNodes)) - agora_graph_1.top(agora_graph_1.top(initialNodes));\n  var wp = agora_graph_1.right(agora_graph_1.right(updatedNodes)) - agora_graph_1.left(agora_graph_1.left(updatedNodes));\n  var hp = agora_graph_1.bottom(agora_graph_1.bottom(updatedNodes)) - agora_graph_1.top(agora_graph_1.top(updatedNodes));\n  return {\n    value: 1 - w * h / (wp * hp)\n  };\n};\n\nexports.SpreadBoundingBoxNormalizedAreaCriteria = utils_1.criteriaWrap({\n  criteria: exports.lambda3,\n  name: 'spread/bounding-box/normalized-area',\n  short: 'sp_bb_na'\n});\nexports.default = exports.SpreadBoundingBoxNormalizedAreaCriteria;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO : LEN05\r\n * @param initial\r\n * @param updated\r\n */\n\n\nexports.l1MetricLength = function (initial, updated) {\n  var initialResult = Math.max(agora_graph_1.round(agora_graph_1.bottom(agora_graph_1.bottom(initial.nodes)) - agora_graph_1.top(agora_graph_1.top(initial.nodes))), agora_graph_1.round(agora_graph_1.right(agora_graph_1.right(initial.nodes)) - agora_graph_1.left(agora_graph_1.left(initial.nodes))));\n  var updatedResult = Math.max(agora_graph_1.round(agora_graph_1.bottom(agora_graph_1.bottom(updated.nodes)) - agora_graph_1.top(agora_graph_1.top(updated.nodes))), agora_graph_1.round(agora_graph_1.right(agora_graph_1.right(updated.nodes)) - agora_graph_1.left(agora_graph_1.left(updated.nodes))));\n  return {\n    value: initialResult !== 0 ? updatedResult / initialResult : -1,\n    initial: initialResult,\n    updated: updatedResult\n  };\n};\n\nexports.SpreadBoundingBoxL1MetricLengthCriteria = utils_1.criteriaWrap({\n  criteria: exports.l1MetricLength,\n  name: 'spread/bounding-box/l1-metric-length',\n  short: 'sp_bb_l1ml'\n});\nexports.default = exports.SpreadBoundingBoxL1MetricLengthCriteria;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar d3_polygon_1 = require(\"d3-polygon\");\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../utils\"); // Spread::Convex Hull::Area -- Strobelt 2012 SSS*12\n// TODO: SSS*12\n\n\nexports.sizeIncrease = function (initial, updated) {\n  var initialHull = d3_polygon_1.polygonHull(convertNodes(initial.nodes));\n  var updatedHull = d3_polygon_1.polygonHull(convertNodes(updated.nodes));\n  if (initialHull === null || updatedHull === null) return {\n    value: -1,\n    error: 'could not compute initial or updated convex hull'\n  };\n  var initialArea = d3_polygon_1.polygonArea(initialHull);\n  var updatedArea = d3_polygon_1.polygonArea(updatedHull);\n  return {\n    value: updatedArea / initialArea,\n    initial: initialArea,\n    updated: updatedArea\n  };\n};\n\nfunction convertNodes(nodes) {\n  // TODO: add node boxes\n  return lodash_1.default.flatMap(nodes, function (n) {\n    var t = agora_graph_1.top(n),\n        l = agora_graph_1.left(n),\n        r = agora_graph_1.right(n),\n        b = agora_graph_1.bottom(n);\n    return [[l, t], [r, t], [r, b], [l, b]];\n  });\n}\n\nexports.SpreadConvexHullAreaCriteria = utils_1.criteriaWrap({\n  criteria: exports.sizeIncrease,\n  name: 'spread/convex-hull/area',\n  short: 'sp_ch_a'\n});\nexports.default = exports.SpreadConvexHullAreaCriteria;","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar interfaces_1 = require(\"./interfaces\");\n\nvar edge_based_1 = __importDefault(require(\"./edge-based\"));\n\nexports.EdgeBased = edge_based_1.default;\n\nvar global_shape_1 = __importDefault(require(\"./global-shape\"));\n\nexports.GlobalShape = global_shape_1.default;\n\nvar node_movement_1 = __importDefault(require(\"./node-movement\"));\n\nexports.NodeMovement = node_movement_1.default;\n\nvar orthogonal_ordering_1 = __importDefault(require(\"./orthogonal-ordering\"));\n\nexports.OrthogonalOrdering = orthogonal_ordering_1.default;\n\nvar spread_1 = __importDefault(require(\"./spread\"));\n\nexports.Spread = spread_1.default;\nexports.manager = {\n  criterias: {},\n  add: function add() {\n    var _this = this;\n\n    var criterias = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      criterias[_i] = arguments[_i];\n    }\n\n    lodash_1.default.forEach(criterias, function (c) {\n      var name = c.name;\n      if (!_this.criterias[name]) _this.criterias[name] = c;else console.error('criterias', 'add', name);\n    });\n  },\n  delete: function _delete(name) {\n    if (this.criterias[name]) delete this.criterias[name];else console.error('criterias', 'delete', name);\n  },\n  batch: function batch(initial, updatedGraphs, list) {\n    var _this = this;\n\n    if (list === void 0) {\n      list = lodash_1.default.keys(this.criterias);\n    }\n\n    var results = [];\n    lodash_1.default.forEach(list, function (name) {\n      results.push(__assign({\n        name: name\n      }, _this.execute(name, initial, updatedGraphs)));\n    });\n    return results;\n  },\n  execute: function execute(criteria, initial, updatedGraphs) {\n    var _this = this;\n\n    if (typeof criteria === 'string') {\n      if (this.criterias[criteria]) criteria = this.criterias[criteria];\n      throw Error(\"Cannot execute a criteria that wasn't added : \" + criteria);\n    }\n\n    if (!interfaces_1.isCriteria(criteria)) throw Error(criteria + ' cannot be used as a criteria, the structure does not match');\n    var results = {};\n    var start = new Date();\n    lodash_1.default.forEach(updatedGraphs, function (updated, name) {\n      results[name] = _this.evaluate(criteria, initial, updated);\n    });\n    var diff = new Date().getTime() - start.getTime();\n    return {\n      results: results,\n      time: diff\n    };\n  },\n  evaluate: function evaluate(criteria, initial, updated) {\n    if (typeof criteria === 'string') {\n      if (this.criterias[criteria]) criteria = this.criterias[criteria];else throw Error(\"Cannot execute a criteria that wasn't added : \" + criteria);\n    }\n\n    if (interfaces_1.isCriteria(criteria)) return criteria.criteria(initial, updated);\n    throw Error(criteria + ' cannot be used as a criteria, the structure does not match');\n  }\n};\nexports.default = exports.manager;"],"sourceRoot":""}