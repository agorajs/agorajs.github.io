{"version":3,"sources":["../node_modules/agora-criteria/dist/utils.js","../node_modules/agora-criteria/dist/node-movement/distance-moved/mean-euclidean.js"],"names":["Object","defineProperty","exports","value","criteriaWrap","_a","name","_criteria","criteria","_short","short","initial","updated","nodes","length","Error","agora_graph_1","utils_1","euclideanDistance","initialGraph","updatedGraph","initialNodes","updatedNodes","nodesLength","change","displacement","index","node","upNode","diff","norm","push","source","x","y","target","NodeMovementDistanceMovedMeanEuclideanCriteria","default"],"mappings":"qGAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IA6BTD,EAAQE,aA1BR,SAAsBC,GACpB,IAAIC,EAAOD,EAAGC,KACVC,EAAYF,EAAGG,SACfC,EAASJ,EAAGK,MAChB,MAAO,CACLJ,KAAMA,EACNI,MAAOD,EACPD,SAAU,SAAkBG,EAASC,GACnC,GAAID,EAAQE,MAAMC,SAAWF,EAAQC,MAAMC,OAUzC,MAAMC,MAAM,aAAeN,GAAkBH,GAAQ,wCAGvD,OAAOC,EAAUI,EAASC,O,iCCzBhCZ,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIa,EAAgB,EAAQ,IAExBC,EAAU,EAAQ,KAWtBf,EAAQgB,kBAAoB,SAAUC,EAAcC,GAOlD,IANA,IAAIC,EAAeF,EAAaN,MAC5BS,EAAeF,EAAaP,MAC5BU,EAAcF,EAAaP,OAC3BU,EAAS,EACTC,EAAe,GAEVC,EAAQ,EAAGA,EAAQH,EAAaG,IAAS,CAChD,IAAIC,EAAON,EAAaK,GACpBE,EAASN,EAAaI,GACtBG,EAAOb,EAAcc,KAAKH,EAAMC,GACpCJ,GAAUK,EAEG,IAATA,GACFJ,EAAaM,KAAK,CAChBC,OAAQ,CACNC,EAAGN,EAAKM,EACRC,EAAGP,EAAKO,GAEVC,OAAQ,CACNF,EAAGL,EAAOK,EACVC,EAAGN,EAAOM,KAMlB,MAAO,CACL/B,MAAOqB,EAASD,EAChBE,aAAcA,IAIlBvB,EAAQkC,+CAAiDnB,EAAQb,aAAa,CAC5EI,SAAUN,EAAQgB,kBAClBZ,KAAM,8CACNI,MAAO,aAETR,EAAQmC,QAAUnC,EAAQkC","file":"static/js/18.04b9a13b.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction criteriaWrap(_a) {\n  var name = _a.name,\n      _criteria = _a.criteria,\n      _short = _a.short;\n  return {\n    name: name,\n    short: _short,\n    criteria: function criteria(initial, updated) {\n      if (initial.nodes.length !== updated.nodes.length) {\n        //* ignoring console because it's captured by the exception\n\n        /*\r\n        console.error(\r\n        'criteria', // family\r\n        criteria.short, // type\r\n        'abording', // action\r\n        'not the same number of nodes' // reason\r\n        ); */\n        throw Error(\"Criteria \" + (_short ? _short : name) + \" abording : not same number of nodes\");\n      }\n\n      return _criteria(initial, updated);\n    }\n  };\n}\n\nexports.criteriaWrap = criteriaWrap;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * TODO: SSS*12\r\n * Evaluates the updatedGraph using the Change criteria\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n *\r\n * @returns {{value: number, displacement: Edge[]}}\r\n */\n\n\nexports.euclideanDistance = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var nodesLength = initialNodes.length;\n  var change = 0;\n  var displacement = [];\n\n  for (var index = 0; index < nodesLength; index++) {\n    var node = initialNodes[index];\n    var upNode = updatedNodes[index];\n    var diff = agora_graph_1.norm(node, upNode);\n    change += diff;\n\n    if (diff !== 0) {\n      displacement.push({\n        source: {\n          x: node.x,\n          y: node.y\n        },\n        target: {\n          x: upNode.x,\n          y: upNode.y\n        }\n      });\n    }\n  }\n\n  return {\n    value: change / nodesLength,\n    displacement: displacement\n  };\n};\n\nexports.NodeMovementDistanceMovedMeanEuclideanCriteria = utils_1.criteriaWrap({\n  criteria: exports.euclideanDistance,\n  name: 'node-movement/distance-moved/mean-euclidean',\n  short: 'nm_dm_me'\n});\nexports.default = exports.NodeMovementDistanceMovedMeanEuclideanCriteria;"],"sourceRoot":""}