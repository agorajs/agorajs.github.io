{"version":3,"sources":["../node_modules/workerize-loader/dist/rpc-wrapper.js","workers/fta.worker.ts"],"names":["module","exports","worker","methods","c","callbacks","addEventListener","e","d","data","type","id","f","error","Object","assign","Error","message","result","evt","document","createEvent","initEvent","method","params","dispatchEvent","forEach","_arguments","arguments","Promise","a","b","postMessage","slice","call","addMethods","w","Worker","name"],"mappings":"iFA2CAA,EAAOC,QA3CP,SAAoBC,EAAQC,GAC1B,IAAIC,EAAI,EACJC,EAAY,GAChBH,EAAOI,iBAAiB,WAAW,SAAUC,GAC3C,IAAIC,EAAID,EAAEE,KACV,GAAe,QAAXD,EAAEE,KAEN,GAAIF,EAAEG,GAAI,CACR,IAAIC,EAAIP,EAAUG,EAAEG,IAEhBC,WACKP,EAAUG,EAAEG,IAEfH,EAAEK,MACJD,EAAE,GAAGE,OAAOC,OAAOC,MAAMR,EAAEK,MAAMI,SAAUT,EAAEK,QAE7CD,EAAE,GAAGJ,EAAEU,aAGN,CACL,IAAIC,EAAMC,SAASC,YAAY,SAC/BF,EAAIG,UAAUd,EAAEe,QAAQ,GAAO,GAC/BJ,EAAIV,KAAOD,EAAEgB,OACbtB,EAAOuB,cAAcN,OAGzBhB,EAAQuB,SAAQ,SAAUH,GACxBrB,EAAOqB,GAAU,WACf,IAAII,EAAaC,UACjB,OAAO,IAAIC,SAAQ,SAAUC,EAAGC,GAC9B,IAAIpB,IAAOP,EACXC,EAAUM,GAAM,CAACmB,EAAGC,GACpB7B,EAAO8B,YAAY,CACjBtB,KAAM,MACNC,GAAIA,EACJY,OAAQA,EACRC,OAAQ,GAAGS,MAAMC,KAAKP,c,oBCnC5B,IAAIQ,EAAa,EAAQ,KACrBhC,EAAU,CAAC,aACfH,EAAOC,QAAU,WAChB,IAAImC,EAAI,IAAIC,OAAO,IAA0B,iCAAkC,CAAEC,KAAM,qBAGvF,OAFAH,EAAWC,EAAGjC,GAEPiC","file":"static/js/8.4e25304f.chunk.js","sourcesContent":["function addMethods(worker, methods) {\n  var c = 0;\n  var callbacks = {};\n  worker.addEventListener('message', function (e) {\n    var d = e.data;\n    if (d.type !== 'RPC') return;\n\n    if (d.id) {\n      var f = callbacks[d.id];\n\n      if (f) {\n        delete callbacks[d.id];\n\n        if (d.error) {\n          f[1](Object.assign(Error(d.error.message), d.error));\n        } else {\n          f[0](d.result);\n        }\n      }\n    } else {\n      var evt = document.createEvent('Event');\n      evt.initEvent(d.method, false, false);\n      evt.data = d.params;\n      worker.dispatchEvent(evt);\n    }\n  });\n  methods.forEach(function (method) {\n    worker[method] = function () {\n      var _arguments = arguments;\n      return new Promise(function (a, b) {\n        var id = ++c;\n        callbacks[id] = [a, b];\n        worker.postMessage({\n          type: 'RPC',\n          id: id,\n          method: method,\n          params: [].slice.call(_arguments)\n        });\n      });\n    };\n  });\n}\n\nmodule.exports = addMethods;","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"algorithm\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"1ba37fa6a8a84becc827.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}