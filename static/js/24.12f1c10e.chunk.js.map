{"version":3,"sources":["../node_modules/agora-criteria/dist/utils.js","../node_modules/agora-criteria/dist/orthogonal-ordering/normalized-number-of-inversions.js"],"names":["Object","defineProperty","exports","value","criteriaWrap","_a","name","_criteria","criteria","_short","short","initial","updated","nodes","length","Error","utils_1","normalizedNumberOfInversions","initialGraph","updatedGraph","initialNodes","updatedNodes","sum","u_index","u","u_prime","v_index","v","v_prime","x","y","OrthogonalOrderingNormalizedNumberInversionsCriteria","default"],"mappings":"iGAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IA6BTD,EAAQE,aA1BR,SAAsBC,GACpB,IAAIC,EAAOD,EAAGC,KACVC,EAAYF,EAAGG,SACfC,EAASJ,EAAGK,MAChB,MAAO,CACLJ,KAAMA,EACNI,MAAOD,EACPD,SAAU,SAAkBG,EAASC,GACnC,GAAID,EAAQE,MAAMC,SAAWF,EAAQC,MAAMC,OAUzC,MAAMC,MAAM,aAAeN,GAAkBH,GAAQ,wCAGvD,OAAOC,EAAUI,EAASC,O,iCCzBhCZ,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIa,EAAU,EAAQ,KAStBd,EAAQe,6BAA+B,SAAUC,EAAcC,GAK7D,IAJA,IAAIC,EAAeF,EAAaL,MAC5BQ,EAAeF,EAAaN,MAC5BS,EAAM,EAEDC,EAAU,EAAGA,EAAUH,EAAaN,OAAQS,IAInD,IAHA,IAAIC,EAAIJ,EAAaG,GACjBE,EAAUJ,EAAaE,GAElBG,EAAU,EAAGA,EAAUN,EAAaN,OAAQY,IAAW,CAC9D,IAAIC,EAAIP,EAAaM,GACjBE,EAAUP,EAAaK,GACvBF,EAAEK,EAAIF,EAAEE,GAAKJ,EAAQI,EAAID,EAAQC,GAAGP,IACpCE,EAAEM,EAAIH,EAAEG,GAAKL,EAAQK,EAAIF,EAAQE,GAAGR,IAI5C,MAAO,CACLnB,MAAOmB,GAAOF,EAAaN,QAAUM,EAAaN,OAAS,MAI/DZ,EAAQ6B,qDAAuDf,EAAQZ,aAAa,CAClFI,SAAUN,EAAQe,6BAClBX,KAAM,sDACNI,MAAO,WAETR,EAAQ8B,QAAU9B,EAAQ6B","file":"static/js/24.12f1c10e.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction criteriaWrap(_a) {\n  var name = _a.name,\n      _criteria = _a.criteria,\n      _short = _a.short;\n  return {\n    name: name,\n    short: _short,\n    criteria: function criteria(initial, updated) {\n      if (initial.nodes.length !== updated.nodes.length) {\n        //* ignoring console because it's captured by the exception\n\n        /*\r\n        console.error(\r\n        'criteria', // family\r\n        criteria.short, // type\r\n        'abording', // action\r\n        'not the same number of nodes' // reason\r\n        ); */\n        throw Error(\"Criteria \" + (_short ? _short : name) + \" abording : not same number of nodes\");\n      }\n\n      return _criteria(initial, updated);\n    }\n  };\n}\n\nexports.criteriaWrap = criteriaWrap;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../utils\");\n/**\r\n * TODO : US\r\n * Evaluates the updatedGraph using the orthogonal ordering criteria\r\n * @param initialGraph the initial graph sorted by index\r\n * @param updatedGraph the updated graph sorted by index\r\n */\n\n\nexports.normalizedNumberOfInversions = function (initialGraph, updatedGraph) {\n  var initialNodes = initialGraph.nodes;\n  var updatedNodes = updatedGraph.nodes;\n  var sum = 0;\n\n  for (var u_index = 0; u_index < initialNodes.length; u_index++) {\n    var u = initialNodes[u_index];\n    var u_prime = updatedNodes[u_index];\n\n    for (var v_index = 0; v_index < initialNodes.length; v_index++) {\n      var v = initialNodes[v_index];\n      var v_prime = updatedNodes[v_index];\n      if (u.x > v.x && u_prime.x < v_prime.x) sum++;\n      if (u.y > v.y && u_prime.y < v_prime.y) sum++;\n    }\n  }\n\n  return {\n    value: sum / (initialNodes.length * (initialNodes.length - 1))\n  };\n};\n\nexports.OrthogonalOrderingNormalizedNumberInversionsCriteria = utils_1.criteriaWrap({\n  criteria: exports.normalizedNumberOfInversions,\n  name: 'orthogonal-ordering/normalized-number-of-inversions',\n  short: 'oo_nni'\n});\nexports.default = exports.OrthogonalOrderingNormalizedNumberInversionsCriteria;"],"sourceRoot":""}