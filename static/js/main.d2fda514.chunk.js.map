{"version":3,"sources":["serviceWorker.ts","layout/Flex.tsx","layout/NesCheckbox.tsx","layout/NesContainer.tsx","layout/NesList.tsx","layout/NesBalloon.tsx","layout/NesButton.tsx","store/actions/file.ts","store/actions/is-upload.ts","store/selectors/selection.ts","store/selectors/isUpload.ts","store/selectors/index.ts","store/actions/algorithm-selection.ts","utils/useToggleAll.tsx","utils/useToggleCheckBox.tsx","store/selectors/references.ts","components/Cite.tsx","pages/Home/AlgorithmList.tsx","pages/Home/Authors.tsx","store/actions/criteria-selection.ts","pages/Home/CriteriaList.tsx","pages/Home/Reference.tsx","pages/Home/ReferenceList.tsx","store/actions/examples-selection.ts","store/actions/examples-files.ts","pages/Home/index.tsx","utils/useUppy.ts","utils/useConst.tsx","utils/promisingFileReader.tsx","components/DownloadLink.tsx","components/DownloadLinkList.tsx","components/SVGEdge.tsx","components/SVGNode.tsx","components/SVGGraph.tsx","pages/Result/index.tsx","pages/LogoLink.tsx","pages/index.tsx","store/defaults/algorithms.ts","store/defaults/criteria.ts","store/defaults/examples.ts","store/reducers/selection-utils.ts","store/reducers/algorithm-selection.ts","store/reducers/algorithms.ts","store/reducers/criteria.ts","store/reducers/criteria-selection.ts","store/reducers/examples.ts","store/reducers/files.ts","store/reducers/is-upload.ts","store/reducers/references.ts","store/reducers/example-files.ts","store/index.ts","store/defaults/references.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","Flex","parent","Parent","auto","column","className","children","classnames","NesCheckbox","React","memo","name","checked","onChange","type","NesContainer","title","centered","rounded","NesList","disc","circle","NesBalloon","right","left","NesButton","primary","success","warning","error","disabled","onClick","addFile","createStandardAction","addFiles","removeFile","clearFiles","setAsUpload","setAsExample","selected","state","_","pickBy","v","map","__","k","value","allSelected","every","isUpload","algorithmSelection","getAlgorithmsWithSelection","createSelector","algorithms","algs","selections","item","id","filteredAlgorithms","filter","cri","areAllAlgorithmSelected","criteriaSelection","getCriteriaWithSelection","criteria","cris","filteredCriterias","getGroupedCriteria","groupBy","allCriteriaAreSelected","getFiles","files","getExampleFiles","exampleFiles","getExamples","examples","getSelectedExamples","exs","getFinalFiles","canGenerateEmbeddings","length","toggleAlg","setAllAlg","setAlg","selectManyAlg","useToggleAll","setAll","dispatch","useDispatch","useCallback","event","target","useToggleCheckBox","toggle","getReferences","references","getReferencesWithIndex","refs","index","referencesToIndexMap","keyBy","Cite","cite","useSelector","ref","key","href","reduce","prev","curr","AlgorithmList","areAllAlgSelected","toggleAllAlg","selection","elements","useMemo","reference","Authors","rel","toggleCri","setCri","setAllCri","selectManyCri","CriteriaList","areAllCriSelected","toggleAllCri","criteriaGroups","style","height","group","Reference","number","authors","additional","hasIn","journal","ReferenceList","r","toggleExampleSelection","addExampleFile","removeExampleFile","Home","uppy","config","listeners","useState","Uppy","useEffect","forEach","on","close","useUppy","restrictions","allowedFileTypes","content","useConst","result","console","log","file","data","Promise","resolve","reject","fr","FileReader","onload","onerror","readAsText","then","res","fileList","fileItemClick","currentTarget","exampleItemClick","filename","getState","a","axios","get","examplefiles","selectedExampleFiles","isUploadSelector","setUpload","setExample","generate","resultOnClick","navigate","classNames","DownloadLink","url","setUrl","File","URL","createObjectURL","revokeObjectURL","download","DownloadLinkList","gml","json","svg","SVGEdge","source","x1","x","y1","y","x2","y2","SVGNode","node","width","text","label","transform","SVGGraph","graph","over","svgRef","rest","scaler","initial","frame","scale","ratio","Math","min","createScale","d3max","nodes","d","sortBy","edges","find","xmlns","viewBox","EdgeList","NodeList","n","localReducer","action","fileCounter","displayable","payload","algFinished","criFinished","algCounter","criCounter","copy","graphResults","deeperCopy","criteriaResults","criIdx","initials","Error","addAlgorithm","GraphMemo","SVGContent","setSVGContent","serializer","XMLSerializer","serializeToString","JSON","stringify","Result","finalFiles","selectedAlgs","selectedCri","useReducer","alglist","algo","scaling","algorithm","default","pfs","pfsp","fta","vpsc","resultnodes","prism","i","position","m_X","m_Y","rwordle_l","RWordleLAlgorithm","diamond","diamondGraphRotation","load","criList","manager","path","criterion","crop","toGraph","current","graphcopy","e","toGML","toEvaluate","from","to","noThrow","currentFileResults","criteriaResult","algIndex","criIndex","resindex","round","LogoLink","link","imageurl","alt","src","Page","textDecoration","color","defaultAlgorithms","defaultCriteria","fullname","defaultExamples","undefined","set","selectMany","createReducer","handleAction","actions","exampleFilesList","reducers","combineReducers","store","createStore","gtree","oo_o","oo_ktd","oo_ni","oo_nni","sp_bb_l1ml","sp_bb_a","sp_bb_na","sp_ch_a","gs_bb_ar","gs_bb_iar","gs_ch_sd","nm_mn","nm_dm_me","nm_dm_ne","nm_dm_h","nm_dm_se","nm_dm_imse","nm_knn","eb_r","e_rsdd","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2fda514.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\ntype FlexProps = {\r\n  parent?: string;\r\n  auto?: boolean;\r\n  column?: boolean;\r\n  className?: string;\r\n};\r\n\r\nexport const Flex: React.FC<FlexProps> = ({\r\n  parent: Parent = 'div',\r\n  auto,\r\n  column,\r\n  className,\r\n  children\r\n}) => (\r\n  // @ts-ignore\r\n  <Parent\r\n    className={classnames(className, 'flex', {\r\n      'flex-auto': auto,\r\n      'flex-column': column\r\n    })}\r\n  >\r\n    {children}\r\n  </Parent>\r\n);\r\nexport default Flex;\r\n\r\nexport const FlexMemo: React.FC<FlexProps> = React.memo(Flex);\r\n","import React from 'react';\r\n\r\ntype NesCheckboxProps = {\r\n  name: string;\r\n  checked: boolean;\r\n  onChange: any;\r\n};\r\n\r\nexport const NesCheckbox: React.FC<NesCheckboxProps> = ({\r\n  name,\r\n  checked,\r\n  onChange,\r\n  children\r\n}) => (\r\n  <label>\r\n    <input\r\n      name={name}\r\n      type=\"checkbox\"\r\n      className=\"nes-checkbox\"\r\n      checked={checked}\r\n      onChange={onChange}\r\n    />\r\n    <span>{children || name}</span>\r\n  </label>\r\n);\r\nexport default NesCheckbox;\r\n\r\nexport const NesCheckboxMemo: React.FC<NesCheckboxProps> = React.memo(\r\n  NesCheckbox\r\n);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\ntype NesContainerProps = {\r\n  centered?: boolean;\r\n  className?: string;\r\n  rounded?: boolean;\r\n  title?: any;\r\n};\r\n\r\nexport const NesContainer: React.FC<NesContainerProps> = ({\r\n  title,\r\n  centered,\r\n  rounded,\r\n  className,\r\n  children\r\n}) => (\r\n  <div\r\n    className={classnames('nes-container', className, {\r\n      'with-title': title,\r\n      'is-centered': centered,\r\n      'is-rounded': rounded\r\n    })}\r\n  >\r\n    {title && <p className=\"title\">{title}</p>}\r\n    {children}\r\n  </div>\r\n);\r\nexport default NesContainer;\r\n\r\nexport const NesContainerMemo: React.FC<NesContainerProps> = React.memo(\r\n  NesContainer\r\n);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\ntype NesListProps = {\r\n  disc?: boolean;\r\n  circle?: boolean;\r\n  className?: string;\r\n};\r\n\r\nexport const NesList: React.FC<NesListProps> = ({\r\n  disc,\r\n  circle,\r\n  className,\r\n  children\r\n}) => (\r\n  <ul\r\n    className={classnames('nes-list', className, {\r\n      'is-disc': disc,\r\n      'is-circle': circle\r\n    })}\r\n  >\r\n    {children}\r\n  </ul>\r\n);\r\nexport default NesList;\r\n\r\nexport const NesListMemo: React.FC<NesListProps> = React.memo(NesList);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\ntype NesBalloonProps = {\r\n  right?: boolean;\r\n  left?: boolean;\r\n  className?: string;\r\n};\r\n\r\nexport const NesBalloon: React.FC<NesBalloonProps> = ({\r\n  right,\r\n  left,\r\n  children,\r\n  className\r\n}) => (\r\n  <div\r\n    className={classnames(className, 'nes-balloon', {\r\n      'from-right': right,\r\n      'from-left': left\r\n    })}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\nexport default NesBalloon;\r\n\r\nexport const NesBalloonMemo: React.FC<NesBalloonProps> = React.memo(NesBalloon);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\ntype NesButtonProps = {\r\n  primary?: boolean;\r\n  success?: boolean;\r\n  warning?: boolean;\r\n  error?: boolean;\r\n  disabled?: boolean;\r\n  onClick?: (event: any) => void;\r\n};\r\n\r\nexport const NesButton: React.FC<NesButtonProps> = ({\r\n  primary,\r\n  success,\r\n  warning,\r\n  error,\r\n  disabled,\r\n  children,\r\n  onClick\r\n}) => (\r\n  <button\r\n    type=\"button\"\r\n    className={classnames('nes-btn', {\r\n      'is-primary': primary,\r\n      'is-success': success,\r\n      'is-warning': warning,\r\n      'is-error': error,\r\n      'is-disabled': disabled\r\n    })}\r\n    onClick={onClick}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\nexport default NesButton;\r\n\r\nexport const NesButtonMemo: React.FC<NesButtonProps> = React.memo(NesButton);\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport { FileType } from '../types';\r\n\r\nconst FILE_ADD = 'file/ADD';\r\nconst FILES_ADD = 'file/ADD_MANY';\r\nconst FILE_REMOVE = 'file/REMOVE';\r\nconst FILE_CLEAR = 'file/CLEAR';\r\n\r\nexport const addFile = createStandardAction(FILE_ADD)<FileType>();\r\nexport const addFiles = createStandardAction(FILES_ADD)<FileType[]>();\r\n\r\nexport const removeFile = createStandardAction(FILE_REMOVE)<string>();\r\n\r\nexport const clearFiles = createStandardAction(FILE_CLEAR)();\r\n","import { createStandardAction } from 'typesafe-actions';\r\n\r\nconst IS_UPLOAD = 'is-upload/TRUE';\r\nconst IS_EXAMPLE = 'is-upload/FALSE';\r\n\r\nexport const setAsUpload = createStandardAction(IS_UPLOAD)();\r\nexport const setAsExample = createStandardAction(IS_EXAMPLE)();\r\n","import _ from 'lodash';\r\nimport { SelectionType } from '../types';\r\n\r\nexport const selected = (state: SelectionType) =>\r\n  _(state)\r\n    .pickBy(v => v)\r\n    .map((__, k) => k)\r\n    .value();\r\nexport const allSelected = (state: SelectionType) =>\r\n  _.every(state, v => v === true);\r\n","import { StateType } from '..';\r\nexport const isUpload = (state: StateType) => state.isUpload;\r\n","import { selected, allSelected } from './selection';\r\nimport { createSelector } from 'reselect';\r\nimport { StateType } from '..';\r\nimport _ from 'lodash';\r\nimport { isUpload } from './isUpload';\r\n\r\nexport const getAlgorithms = (state: StateType) => state.algorithms;\r\nexport const algorithmSelection = (state: StateType) =>\r\n  state.algorithmSelection;\r\n\r\nexport const getAlgorithmsWithSelection = createSelector(\r\n  getAlgorithms,\r\n  algorithmSelection,\r\n  (algs, selections) =>\r\n    _.map(algs, item => ({ ...item, selected: selections[item.id] || false }))\r\n);\r\n\r\nexport const filteredAlgorithms = createSelector(\r\n  getAlgorithmsWithSelection,\r\n  algs => _.filter(algs, cri => cri.selected)\r\n);\r\n\r\nexport const areAllAlgorithmSelected = createSelector(\r\n  algorithmSelection,\r\n  allSelected\r\n);\r\n\r\nexport const selectedAlgorithms = createSelector(\r\n  algorithmSelection,\r\n  selected\r\n);\r\n\r\nexport const getCriteria = (state: StateType) => state.criteria;\r\n\r\nexport const criteriaSelection = (state: StateType) => state.criteriaSelection;\r\nexport const getCriteriaWithSelection = createSelector(\r\n  getCriteria,\r\n  criteriaSelection,\r\n  (cris, selections) =>\r\n    _.map(cris, item => ({ ...item, selected: selections[item.id] || false }))\r\n);\r\n\r\nexport const filteredCriterias = createSelector(\r\n  getCriteriaWithSelection,\r\n  cris => _.filter(cris, cri => cri.selected)\r\n);\r\n\r\nexport const getGroupedCriteria = createSelector(\r\n  getCriteriaWithSelection,\r\n  cri => _.groupBy(cri, 'group')\r\n);\r\n\r\nexport const allCriteriaAreSelected = createSelector(\r\n  criteriaSelection,\r\n  allSelected\r\n);\r\nexport const selectedCriteria = createSelector(\r\n  criteriaSelection,\r\n  selected\r\n);\r\n\r\nexport const getFiles = (state: StateType) => state.files;\r\n\r\nexport const getExampleFiles = (state: StateType) => state.exampleFiles;\r\nexport const getExamples = (state: StateType) => state.examples;\r\nexport const getSelectedExamples = createSelector(\r\n  getExamples,\r\n  exs => _.filter(exs, 'selected')\r\n);\r\n\r\nexport const getFinalFiles = createSelector(\r\n  getFiles,\r\n  getExampleFiles,\r\n  isUpload,\r\n  (files, examples, isUpload) => (isUpload ? files : examples)\r\n);\r\n\r\nexport const canGenerateEmbeddings = createSelector(\r\n  getFiles,\r\n  getExampleFiles,\r\n  isUpload,\r\n  (files, examples, isUpload) =>\r\n    isUpload ? files.length > 0 : examples.length > 0\r\n);\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport { SelectionType } from '../types';\r\n\r\nconst ALG_TOGGLE = 'algorithm-selection/TOGGLE';\r\nconst ALG_SET = 'algorithm-selection/SET';\r\nconst ALG_SELECT_MANY = 'algorithm-selection/SELECT_MANY';\r\nconst SET_ALL = 'algorithm-selection/SET_ALL';\r\n\r\nexport const toggleAlg = createStandardAction(ALG_TOGGLE)<string>();\r\nexport const setAllAlg = createStandardAction(SET_ALL)<boolean>();\r\nexport const setAlg = createStandardAction(ALG_SET)<[string, boolean]>();\r\nexport const selectManyAlg = createStandardAction(ALG_SELECT_MANY)<\r\n  SelectionType\r\n>();\r\n","import { useCallback, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PayloadAC } from 'typesafe-actions';\r\n\r\nexport function useToggleAll(setAll: PayloadAC<string, boolean>) {\r\n  const dispatch = useDispatch();\r\n  return useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      dispatch(setAll(event.target.checked));\r\n    },\r\n    [dispatch, setAll]\r\n  );\r\n}\r\nexport default useToggleAll;\r\n","import { useCallback, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PayloadAC } from 'typesafe-actions';\r\n\r\nexport function useToggleCheckBox(toggle: PayloadAC<string, string>) {\r\n  const dispatch = useDispatch();\r\n  return useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      dispatch(toggle(event.target.name));\r\n    },\r\n    [dispatch, toggle]\r\n  );\r\n}\r\n\r\nexport default useToggleCheckBox;\r\n","import { createSelector } from 'reselect';\r\nimport { StateType } from '..';\r\nimport _ from 'lodash';\r\nexport const getReferences = (state: StateType) => state.references;\r\nexport const getReferencesWithIndex = createSelector(\r\n  getReferences,\r\n  refs => _.map(refs, (v, index) => ({ ...v, index: index + 1 }))\r\n);\r\nexport const referencesToIndexMap = createSelector(\r\n  getReferencesWithIndex,\r\n  refs => _.keyBy(refs, 'id')\r\n);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { referencesToIndexMap } from '../store/selectors/references';\r\ntype CiteProps = {\r\n  cite: string[];\r\n};\r\n\r\nexport const Cite: React.FC<CiteProps> = ({ cite }) => {\r\n  const references = useSelector(referencesToIndexMap);\r\n\r\n  return (\r\n    <>\r\n      [\r\n      {cite\r\n        .map<React.ReactNode>(ref => (\r\n          <a key={ref} href={'#ref:' + ref}>\r\n            {references[ref].index}\r\n          </a>\r\n        ))\r\n        .reduce((prev, curr) => [prev, ',', curr])}\r\n      ]\r\n    </>\r\n  );\r\n};\r\nexport default Cite;\r\n\r\nexport const CiteMemo: React.FC<CiteProps> = React.memo(Cite);\r\n","import React, { useMemo } from 'react';\r\nimport _ from 'lodash';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  areAllAlgorithmSelected,\r\n  getAlgorithmsWithSelection\r\n} from '../../store/selectors';\r\nimport { toggleAlg, setAllAlg } from '../../store/actions/algorithm-selection';\r\nimport { NesContainer, NesCheckbox, Flex } from '../../layout';\r\nimport useToggleAll from '../../utils/useToggleAll';\r\nimport useToggleCheckBox from '../../utils/useToggleCheckBox';\r\nimport Cite from '../../components/Cite';\r\n\r\nexport const AlgorithmList: React.FC<{\r\n  className?: string;\r\n}> = function({ className }) {\r\n  const areAllAlgSelected = useSelector(areAllAlgorithmSelected);\r\n  const toggleAllAlg = useToggleAll(setAllAlg);\r\n\r\n  const selection = useSelector(getAlgorithmsWithSelection);\r\n  const toggle = useToggleCheckBox(toggleAlg);\r\n\r\n  const title = (\r\n    <NesCheckbox\r\n      name=\"Algorithms\"\r\n      checked={areAllAlgSelected}\r\n      onChange={toggleAllAlg}\r\n    />\r\n  );\r\n\r\n  const elements = useMemo(\r\n    () =>\r\n      _.map(selection, ({ selected, id, name, reference: ref }) => {\r\n        return (\r\n          <NesCheckbox key={id} name={id} checked={selected} onChange={toggle}>\r\n            {name} {ref && <Cite cite={ref} />}\r\n          </NesCheckbox>\r\n        );\r\n      }),\r\n    [selection, toggle]\r\n  );\r\n\r\n  // const half_length = Math.ceil(elements.length / 2);\r\n\r\n  return (\r\n    <NesContainer centered className={className} title={title}>\r\n      <Flex column className=\"items-start\">\r\n        {elements}\r\n      </Flex>\r\n    </NesContainer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { NesContainer } from '../../layout';\r\n\r\nexport const Authors: React.FC<{ className?: string }> = ({ className }) => (\r\n  <section id=\"authors\" className={className}>\r\n    <NesContainer rounded>\r\n      <p>\r\n        Automatic Graph Overlap Removal Algorithms\r\n        <br />\r\n        <span className=\"code\">\r\n          Fati Chen, Arnaud Sallaberry, Laurent Piccinini, Pascal Poncelet.\r\n        </span>\r\n        <br />\r\n        <a\r\n          href=\"https://arxiv.org/abs/1908.07363\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          [arXiv: 1908.07363]\r\n        </a>\r\n      </p>\r\n    </NesContainer>\r\n  </section>\r\n);\r\nexport default Authors;\r\n\r\nexport const AuthorsMemo: React.FC<{ className?: string }> = React.memo(\r\n  Authors\r\n);\r\n","import { createStandardAction } from 'typesafe-actions';\r\nimport { SelectionType } from '../types';\r\n\r\nconst CRI_TOGGLE = 'criteria-selection/TOGGLE';\r\nconst CRI_SELECT = 'criteria-selection/SET';\r\nconst CRI_SELECT_MANY = 'criteria-selection/SELECT_MANY';\r\nconst CRI_SET_ALL = 'criteria-selection/SET_ALL';\r\n\r\nexport const toggleCri = createStandardAction(CRI_TOGGLE)<string>();\r\n\r\nexport const setCri = createStandardAction(CRI_SELECT)<[string, boolean]>();\r\n\r\nexport const setAllCri = createStandardAction(CRI_SET_ALL)<boolean>();\r\n\r\nexport const selectManyCri = createStandardAction(CRI_SELECT_MANY)<\r\n  SelectionType\r\n>();\r\n","import _ from 'lodash';\r\nimport React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Flex, NesCheckbox, NesContainer } from '../../layout';\r\nimport { setAllCri, toggleCri } from '../../store/actions/criteria-selection';\r\nimport {\r\n  allCriteriaAreSelected,\r\n  getGroupedCriteria\r\n} from '../../store/selectors';\r\n\r\nimport useToggleAll from '../../utils/useToggleAll';\r\nimport useToggleCheckBox from '../../utils/useToggleCheckBox';\r\nimport Cite from '../../components/Cite';\r\n\r\nexport const CriteriaList: React.FC<{\r\n  className?: string;\r\n}> = function({ className }) {\r\n  const areAllCriSelected = useSelector(allCriteriaAreSelected);\r\n  const toggleAllCri = useToggleAll(setAllCri);\r\n\r\n  const criteriaGroups = useSelector(getGroupedCriteria);\r\n  const toggle = useToggleCheckBox(toggleCri);\r\n\r\n  const title = (\r\n    <NesCheckbox\r\n      name=\"Criterias\"\r\n      checked={areAllCriSelected}\r\n      onChange={toggleAllCri}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <NesContainer centered className={className} title={title}>\r\n      <Flex column className=\"items-start tl\">\r\n        <div className=\"overflow-auto w-100\" style={{ height: '300px' }}>\r\n          {_.map(criteriaGroups, (group, key) => {\r\n            return (\r\n              <div key={key} className=\"group mb1\">\r\n                <p className=\"nes-text is-primary\">{key}</p>\r\n                <Flex column className=\"childrens ml4 code\">\r\n                  {_.map(group, ({ id, name, selected, reference: ref }) => (\r\n                    <NesCheckbox\r\n                      key={id}\r\n                      name={id}\r\n                      checked={selected}\r\n                      onChange={toggle}\r\n                    >\r\n                      {name + ' '}\r\n                      {ref && <Cite cite={ref} />}\r\n                    </NesCheckbox>\r\n                  ))}\r\n                </Flex>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Flex>\r\n    </NesContainer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ReferenceType } from '../../store/types';\r\n\r\nexport const Reference: React.FC<ReferenceType & { number: number }> = ({\r\n  id,\r\n  number,\r\n  authors,\r\n  title,\r\n  additional,\r\n  hasIn,\r\n  journal,\r\n  children\r\n}) => (\r\n  <p id={'ref:' + id} className=\"code\">\r\n    <b>[{number}]</b> {authors}.{' '}\r\n    <span className=\"nes-text is-primary\">{title}.</span> {hasIn && 'In '}\r\n    <i>{journal}</i>\r\n    {additional && ', ' + additional}.{children}\r\n  </p>\r\n);\r\nexport default Reference;\r\n\r\nexport const ReferenceMemo: React.FC<\r\n  ReferenceType & { number: number }\r\n> = React.memo(Reference);\r\n","import React from 'react';\r\nimport { Reference } from './Reference';\r\nimport { useSelector } from 'react-redux';\r\nimport { getReferences } from '../../store/selectors/references';\r\nexport const ReferenceList: React.FC<{\r\n  className?: string;\r\n}> = ({ className }) => {\r\n  const references = useSelector(getReferences);\r\n  return (\r\n    <section id=\"references\" className={className}>\r\n      <h3>References</h3>\r\n      <div className=\"tl\">\r\n        {references.map((r, index) => (\r\n          <Reference key={r.id} {...r} number={index + 1} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default ReferenceList;\r\n\r\nexport const ReferenceListMemo: React.FC<{\r\n  className?: string;\r\n}> = React.memo(ReferenceList);\r\n","import { createStandardAction } from 'typesafe-actions';\r\n\r\nconst EXAMPLE_TOGGLE = 'examples-selection/TOGGLE';\r\n\r\nexport const toggleExampleSelection = createStandardAction(EXAMPLE_TOGGLE)<\r\n  string\r\n>();\r\n","import axios from 'axios';\r\nimport { createStandardAction } from 'typesafe-actions';\r\nimport { ExampleFileType } from '../types';\r\nimport { toggleExampleSelection } from './examples-selection';\r\nimport { StateType } from '..';\r\nimport _ from 'lodash';\r\n\r\nconst EXAMPLE_FILE_ADD = 'example-file/ADD';\r\nconst EXAMPLE_FILE_REMOVE = 'example-file/REMOVE';\r\n\r\nexport const addExampleFile = createStandardAction(EXAMPLE_FILE_ADD)<\r\n  ExampleFileType\r\n>();\r\n\r\nexport const removeExampleFile = createStandardAction(EXAMPLE_FILE_REMOVE)<\r\n  string\r\n>();\r\n\r\nexport const downloadThenToggleExampleSelection = function(filename: string) {\r\n  return async function(dispatch: any, getState: () => StateType) {\r\n    if (_.filter(getState().exampleFiles, v => v.id === filename).length > 0) {\r\n      dispatch(removeExampleFile(filename));\r\n    } else {\r\n      const res = await axios.get('dataset/' + filename);\r\n\r\n      dispatch(\r\n        addExampleFile({ id: filename, name: filename, data: res.data })\r\n      );\r\n    }\r\n\r\n    dispatch(toggleExampleSelection(filename));\r\n  };\r\n};\r\n","import { RouteComponentProps, navigate } from '@reach/router';\r\nimport { UppyFile } from '@uppy/core';\r\nimport '@uppy/core/dist/style.css';\r\nimport '@uppy/dashboard/dist/style.css';\r\nimport '@uppy/drag-drop/dist/style.css';\r\nimport { DragDrop } from '@uppy/react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport React, { MouseEvent, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Flex, NesButton, NesList } from '../../layout';\r\nimport { addFile, removeFile } from '../../store/actions/file';\r\nimport { setAsExample, setAsUpload } from '../../store/actions/is-upload';\r\nimport {\r\n  canGenerateEmbeddings,\r\n  getExamples,\r\n  getFiles,\r\n  getSelectedExamples\r\n} from '../../store/selectors';\r\nimport { isUpload as isUploadSelector } from '../../store/selectors/isUpload';\r\nimport { useConst } from '../../utils/useConst';\r\nimport useUppy from '../../utils/useUppy';\r\nimport { AlgorithmList } from './AlgorithmList';\r\nimport Authors from './Authors';\r\nimport { CriteriaList } from './CriteriaList';\r\nimport './index.css';\r\nimport { ReferenceList } from './ReferenceList';\r\nimport { downloadThenToggleExampleSelection } from '../../store/actions/examples-files';\r\nimport { promisingFileReader } from '../../utils/promisingFileReader';\r\n\r\nconst Home: React.FC<RouteComponentProps> = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const uppyListeners = useConst<{\r\n    [k: string]: (result: UppyFile, ...rest: any[]) => any;\r\n  }>(() => ({\r\n    'file-added': result => {\r\n      console.log(result);\r\n      const { id, data } = result;\r\n      promisingFileReader(data as File).then(res =>\r\n        dispatch(addFile({ id, data: res, name: (data as File).name }))\r\n      );\r\n    },\r\n    'restriction-failed': (__, error) => {\r\n      console.log(error);\r\n    }\r\n  }));\r\n\r\n  const uppy = useUppy(\r\n    { restrictions: { allowedFileTypes: ['.gml'] } },\r\n    uppyListeners\r\n  );\r\n\r\n  const fileList = useSelector(getFiles);\r\n  const fileItemClick = useCallback(\r\n    (event: MouseEvent) => {\r\n      dispatch(removeFile(event.currentTarget.id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const exampleItemClick = useCallback(\r\n    (event: MouseEvent) => {\r\n      dispatch(downloadThenToggleExampleSelection(event.currentTarget.id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const examplefiles = useSelector(getExamples);\r\n  const selectedExampleFiles = useSelector(getSelectedExamples);\r\n\r\n  const isUpload = useSelector(isUploadSelector);\r\n\r\n  const setUpload = useCallback(() => dispatch(setAsUpload()), [dispatch]);\r\n  const setExample = useCallback(() => dispatch(setAsExample()), [dispatch]);\r\n\r\n  const generate = useSelector(canGenerateEmbeddings);\r\n\r\n  const resultOnClick = useCallback(\r\n    (event: MouseEvent) => {\r\n      generate && navigate('result');\r\n    },\r\n    [generate]\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-100\">\r\n      <Authors className=\"center mw7 mv3\" />\r\n      <Flex parent=\"section\" className=\"mv3\">\r\n        <Flex column className=\"item-stretch pa3 justify-around w5\">\r\n          <NesButton primary={isUpload} onClick={setUpload}>\r\n            <div className=\"pv2\">Upload Files</div>\r\n          </NesButton>\r\n          <NesButton primary={!isUpload} onClick={setExample}>\r\n            <div className=\"pv2\">Examples</div>\r\n          </NesButton>\r\n        </Flex>\r\n        <Flex className=\"w-100\">\r\n          {isUpload ? (\r\n            <>\r\n              <div className=\"w-100\">\r\n                <h3 className=\"tc\">Upload</h3>\r\n                {\r\n                  //@ts-ignore\r\n                  <DragDrop uppy={uppy} height=\"256px\" />\r\n                }\r\n              </div>\r\n              {fileList.length > 0 && (\r\n                <div className=\"tl\">\r\n                  <h3 className=\"tc\">&nbsp;</h3>\r\n                  <NesList\r\n                    disc\r\n                    className=\"overflow-y-scroll h5 mb0 w5 hover-success code\"\r\n                  >\r\n                    {_.map(fileList, ({ id, data, name }) => (\r\n                      <li\r\n                        key={id}\r\n                        id={id}\r\n                        className=\"f6 mr1 hover-error color-inherit\"\r\n                        onClick={fileItemClick}\r\n                      >\r\n                        <div className=\"mr1 truncate\">{name}</div>\r\n                      </li>\r\n                    ))}\r\n                  </NesList>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"w-50\">\r\n                <h3>Select Files</h3>\r\n                <NesList\r\n                  disc\r\n                  className=\"overflow-y-scroll h5 mb0 tl w-100 code\"\r\n                >\r\n                  {_.map(examplefiles, ({ selected, file }) => (\r\n                    <li\r\n                      key={file}\r\n                      id={file}\r\n                      className={classNames('f6', 'mr1', 'color-inherit', {\r\n                        'hover-success ': !selected,\r\n                        'is-success': selected,\r\n                        'nes-text': selected\r\n                      })}\r\n                      onClick={exampleItemClick}\r\n                    >\r\n                      <div className=\"mr1 truncate\">{file}</div>\r\n                    </li>\r\n                  ))}\r\n                </NesList>\r\n              </div>\r\n              <div className=\"w-50\">\r\n                <h3>Selected</h3>\r\n                <NesList\r\n                  disc\r\n                  className=\"overflow-y-scroll h5 mb0 tl w-100 code\"\r\n                >\r\n                  {_(selectedExampleFiles)\r\n                    .map(({ selected, file }) => (\r\n                      <li\r\n                        key={file}\r\n                        id={file}\r\n                        className={classNames(\r\n                          'f6',\r\n                          'mr1',\r\n                          'color-inherit',\r\n                          'hover-error ',\r\n                          {\r\n                            'is-success': selected,\r\n                            'nes-text': selected\r\n                          }\r\n                        )}\r\n                        onClick={exampleItemClick}\r\n                      >\r\n                        <div className=\"mr1 truncate\">{file}</div>\r\n                      </li>\r\n                    ))\r\n                    .value()}\r\n                </NesList>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n      <div className=\"mv3\">\r\n        <NesButton\r\n          primary={generate}\r\n          disabled={!generate}\r\n          onClick={resultOnClick}\r\n        >\r\n          <div className=\"pa3\">Generate Overlap Free Embeddings</div>\r\n        </NesButton>\r\n      </div>\r\n      <Flex>\r\n        <AlgorithmList className=\"w-50 ma2\" />\r\n        <CriteriaList className=\"pr0 w-50 ma2 \" />\r\n      </Flex>\r\n      <ReferenceList className=\"mv3\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Uppy, { UppyFile } from '@uppy/core';\r\nimport _ from 'lodash';\r\n\r\nimport { useEffect, useState } from 'react';\r\nexport default function useUppy(\r\n  config: object,\r\n  listeners: {\r\n    [k: string]: (result: UppyFile, ...rest: any[]) => any;\r\n  }\r\n) {\r\n  const [uppy] = useState(() => Uppy(config));\r\n  useEffect(() => {\r\n    _.forEach(listeners, (item, key) => uppy.on(key, item));\r\n\r\n    return () => uppy.close();\r\n  }, [listeners, uppy]);\r\n\r\n  return uppy;\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport function useConst<T>(content: () => T) {\r\n  const [get] = useState(content);\r\n  return get;\r\n}\r\n","//eslint-disable-next-line\r\nexport function promisingFileReader(file: File | Blob): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const fr = new FileReader();\r\n    fr.onload = () => resolve(fr.result as string);\r\n    fr.onerror = reject;\r\n    fr.readAsText(file);\r\n  });\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nexport const DownloadLink: React.FC<{\r\n  content: string;\r\n  name: string;\r\n}> = function({ content, name, children }) {\r\n  const [url, setUrl] = useState();\r\n\r\n  useEffect(() => {\r\n    var file = new File([content], name, { type: 'plain/text' });\r\n    const url = URL.createObjectURL(file);\r\n\r\n    setUrl(url);\r\n    // cleanup on unmount\r\n    return () => URL.revokeObjectURL(url);\r\n  }, [name, content]);\r\n\r\n  // TODO suspense update\r\n  return url ? (\r\n    <a href={url} download={name} className=\"bw1 ba mr1 no-underline\">\r\n      {children ? children : name}\r\n    </a>\r\n  ) : null;\r\n};\r\n\r\nexport default DownloadLink;\r\n","import React from 'react';\r\nimport DownloadLink from './DownloadLink';\r\n\r\nexport const DownloadLinkList: React.FC<{\r\n  name: string;\r\n  gml?: string;\r\n  json: string;\r\n  svg?: string | null;\r\n}> = function({ name, gml, json, svg }) {\r\n  return (\r\n    <div className=\"f7\">\r\n      {gml ? (\r\n        <DownloadLink content={gml} name={name + '.gml'}>\r\n          GML\r\n        </DownloadLink>\r\n      ) : null}\r\n      <DownloadLink content={json} name={name + '.json'}>\r\n        JSON\r\n      </DownloadLink>\r\n      {svg ? (\r\n        <DownloadLink content={svg} name={name + '.svg'}>\r\n          SVG\r\n        </DownloadLink>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadLinkList;\r\n","import React from 'react';\r\nimport { Node } from 'agora-graph';\r\n\r\nexport const SVGEdge: React.FC<{ source: Node; target: Node }> = function({\r\n  source,\r\n  target\r\n}) {\r\n  return (\r\n    <line\r\n      className=\"link\"\r\n      x1={source.x}\r\n      y1={source.y}\r\n      x2={target.x}\r\n      y2={target.y}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SVGEdge;\r\n","import React from 'react';\r\nimport { Node } from 'agora-graph';\r\n\r\nexport const SVGNode: React.FC<{ node: Node }> = function({\r\n  node: { x, y, height, width, index, label }\r\n}) {\r\n  let text = label || index;\r\n  if (text === 'undefined') text = index;\r\n  return (\r\n    <g className=\"node\" transform={`translate(${x},${y})`}>\r\n      <rect\r\n        className=\"rect\"\r\n        width={width}\r\n        height={height}\r\n        transform={`translate(${-width / 2},${-height / 2})`}\r\n      />\r\n      {/* <text className=\"label\" transform=\"translate(-5,6)\">\r\n        {label !== 'undefined' ? label || index : index}\r\n      </text> */}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default SVGNode;\r\n","import React, { SVGProps } from 'react';\r\nimport _ from 'lodash';\r\nimport { max as d3max } from 'd3-array';\r\nimport { Graph, Node, Box } from 'agora-graph';\r\nimport EdgeComp from './SVGEdge';\r\nimport NodeComp from './SVGNode';\r\n\r\nexport type SVGGraphType = {\r\n  graph: Graph;\r\n  over?: boolean;\r\n  width: number;\r\n  height: number;\r\n  svgRef: any;\r\n} & SVGProps<SVGSVGElement>;\r\n\r\nexport const SVGGraph: React.FC<SVGGraphType> = function({\r\n  graph,\r\n  over = false,\r\n  width,\r\n  height,\r\n  svgRef,\r\n  ...rest\r\n}) {\r\n  const box = {\r\n    width: d3max(graph.nodes, d => d.x + d.width / 2) || 0,\r\n    height: d3max(graph.nodes, d => d.y + d.height / 2) || 0\r\n  };\r\n\r\n  const scaler = createScale(box, { width, height });\r\n\r\n  const nodes = _(graph.nodes)\r\n    .map(({ width, height, x, y, ...rest }) => ({\r\n      ...rest,\r\n      width: scaler(width),\r\n      height: scaler(height),\r\n      x: scaler(x),\r\n      y: scaler(y)\r\n    }))\r\n    .sortBy('index')\r\n    .value();\r\n\r\n  const edges: [Node, Node][] = graph.edges.map<[Node, Node]>(\r\n    ({ source, target }) => [\r\n      _.find(nodes, { index: source }) as Node,\r\n      _.find(nodes, { index: target }) as Node\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width}\r\n      height={height}\r\n      viewBox={`-5,-5,${width + 10},${height + 10}`}\r\n      {...rest}\r\n      ref={svgRef}\r\n    >\r\n      <style>{`\r\n      .edges { \r\n        stroke: #878fff;\r\n        stroke-width: 2px;\r\n      }\r\n\r\n      .rect {\r\n        stroke: #000;\r\n        fill: #eee;\r\n      }\r\n      `}</style>\r\n      {/* <g className=\"nodes\">\r\n        {nodes.map(n => (\r\n          <NodeComp key={n.index} node={n}></NodeComp>\r\n        ))}\r\n      </g> */}\r\n      {/* {over ? (\r\n        <>\r\n          <NodeList nodes={nodes} />\r\n          <EdgeList edges={edges} />\r\n        </>\r\n      ) : (\r\n\r\n      )} */}\r\n      <EdgeList edges={edges} />\r\n      <NodeList nodes={nodes} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default SVGGraph;\r\n\r\nconst EdgeList: React.FC<{ edges: [Node, Node][] }> = function({ edges }) {\r\n  return (\r\n    <g className=\"edges\">\r\n      {edges.map(([source, target]) => (\r\n        <EdgeComp\r\n          // key={source.index + ':' + target.index}\r\n          source={source}\r\n          target={target}\r\n        />\r\n      ))}\r\n    </g>\r\n  );\r\n};\r\n\r\nconst NodeList: React.FC<{ nodes: Node[] }> = function({ nodes }) {\r\n  return (\r\n    <g className=\"nodes\">\r\n      {nodes.map(n => (\r\n        <NodeComp key={n.index} node={n}></NodeComp>\r\n      ))}\r\n    </g>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n * @param initial\r\n * @param frame\r\n *\r\n * @returns function which converts the coordinate for the projection\r\n */\r\nexport function createScale(initial: Box, frame: Box): (ref: number) => number {\r\n  const scale: any = function(initial: number) {\r\n    return scale.ratio * initial;\r\n  };\r\n\r\n  scale.ratio = Math.min(\r\n    frame.width / initial.width,\r\n    frame.height / initial.height\r\n  );\r\n\r\n  return scale;\r\n}\r\n","import React, { useState, useCallback, useEffect, useReducer } from 'react';\r\nimport { RouteComponentProps, Redirect } from '@reach/router';\r\nimport { Flex } from '../../layout';\r\nimport DownloadLinkList from '../../components/DownloadLinkList';\r\nimport SVGGraph from '../../components/SVGGraph';\r\nimport './index.css';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  getFinalFiles,\r\n  filteredCriterias,\r\n  filteredAlgorithms\r\n} from '../../store/selectors';\r\nimport { Graph, crop, round } from 'agora-graph';\r\nimport _ from 'lodash';\r\nimport { toGraph, toGML } from 'agora-gml';\r\n\r\ntype LocalType = {\r\n  fileCounter: number;\r\n  algorithms: LoadedAlg[];\r\n  criteria: {\r\n    id: string;\r\n    name: string;\r\n    group: string;\r\n    criterion: (initial: Graph, updated: Graph) => { value: number };\r\n  }[];\r\n  displayable: any[];\r\n  algFinished: boolean;\r\n  criFinished: boolean;\r\n  criCounter: number;\r\n  initials: { graph: Graph; gml?: string }[];\r\n  algCounter: number;\r\n  graphResults: { graph: Graph; gml?: string }[][];\r\n  criteriaResults: any[][][];\r\n};\r\n\r\ntype AlgMeta = {\r\n  selected: boolean;\r\n  id: string;\r\n  name: string;\r\n  reference?: string[];\r\n};\r\n\r\ntype LoadedAlg = AlgMeta & { algorithm: Function };\r\n\r\nfunction localReducer(state: LocalType, action: any): LocalType {\r\n  switch (action.type) {\r\n    // which file are we doing now ?\r\n    case 'incrementFileCounter':\r\n      return { ...state, fileCounter: state.fileCounter + 1 };\r\n    // which one can be displayed\r\n    case 'addDisplayableFile':\r\n      return { ...state, displayable: [...state.displayable, action.payload] };\r\n    // has loaded a new algorithm\r\n    case 'addAlgorithm':\r\n      return { ...state, algorithms: [...state.algorithms, action.payload] };\r\n    case 'addCriterion':\r\n      return { ...state, criteria: [...state.criteria, action.payload] };\r\n    // algorithms have finished loading\r\n    case 'algFinished':\r\n      return {\r\n        ...state,\r\n        algFinished: true\r\n      };\r\n    // criteria have finished loading\r\n    case 'criFinished':\r\n      return {\r\n        ...state,\r\n        criFinished: true\r\n      };\r\n    // which alg is runnin rn\r\n    case 'incrementAlgCounter':\r\n      return { ...state, algCounter: state.algCounter + 1 };\r\n    case 'incrementCriCounter':\r\n      return { ...state, criCounter: state.criCounter + 1 };\r\n    case 'resetAlgCounter':\r\n      return { ...state, algCounter: -1 };\r\n    //  [filecounter][algcounter] and contains the graph\r\n    case 'addResult': {\r\n      const copy = [...state.graphResults];\r\n      copy[state.fileCounter] = copy[state.fileCounter] || [];\r\n      const deeperCopy = [...copy[state.fileCounter]];\r\n      deeperCopy[state.algCounter] = action.payload;\r\n      copy[state.fileCounter] = deeperCopy;\r\n      return { ...state, graphResults: copy };\r\n    }\r\n    case 'addCriResult': {\r\n      const copy = [...state.criteriaResults];\r\n      copy[state.fileCounter] = copy[state.fileCounter] || []; //create if not exist\r\n      for (let criIdx = 0; criIdx < action.payload.length; criIdx++) {\r\n        const value = action.payload[criIdx];\r\n\r\n        copy[state.fileCounter][criIdx] = copy[state.fileCounter][criIdx] || []; //create if not exist\r\n        copy[state.fileCounter][criIdx][state.algCounter] = value;\r\n      }\r\n\r\n      return { ...state, criteriaResults: copy };\r\n    }\r\n    case 'addInitial': {\r\n      return { ...state, initials: [...state.initials, action.payload] };\r\n    }\r\n    default:\r\n      throw Error('error localreducer');\r\n  }\r\n}\r\n\r\nfunction addAlgorithm(payload: any) {\r\n  return { type: 'addAlgorithm', payload };\r\n}\r\n\r\nfunction addCriterion(payload: any) {\r\n  return { type: 'addCriterion', payload };\r\n}\r\n\r\nconst Result: React.FC<RouteComponentProps> = function() {\r\n  const finalFiles = useSelector(getFinalFiles);\r\n  const selectedAlgs = useSelector(filteredAlgorithms);\r\n  const selectedCri = useSelector(filteredCriterias);\r\n\r\n  const [state, dispatch] = useReducer(localReducer, {\r\n    fileCounter: -1,\r\n    algCounter: -1,\r\n    criCounter: -1,\r\n    graphResults: [],\r\n    initials: [],\r\n    algFinished: false,\r\n    criFinished: false,\r\n    algorithms: [],\r\n    criteria: [],\r\n    displayable: [],\r\n    criteriaResults: []\r\n  });\r\n\r\n  // loading algorithms\r\n  useEffect(() => {\r\n    const load = async (alglist: AlgMeta[]) => {\r\n      for (const algo of alglist) {\r\n        switch (algo.id) {\r\n          case 'scale':\r\n            const scaling = await import('agora-scaling');\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: scaling.default.algorithm\r\n              })\r\n            );\r\n            break;\r\n          case 'pfs':\r\n            const pfs = await import('agora-pfs');\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: pfs.default.algorithm\r\n              })\r\n            );\r\n            break;\r\n          case 'pfsp':\r\n            const pfsp = await import('agora-pfsp');\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: pfsp.default.algorithm\r\n              })\r\n            );\r\n            break;\r\n          case 'fta':\r\n            const fta = await import('agora-fta');\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: fta.default.algorithm\r\n              })\r\n            );\r\n            break;\r\n          case 'vpsc':\r\n            const vpsc = await import('agora-vpsc');\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: vpsc.default.algorithm\r\n              })\r\n            );\r\n            break;\r\n          case 'prism':\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: (graph: Graph) => {\r\n                  const resultnodes = (window as any).prism(graph.nodes);\r\n                  // console.log(resultnodes);\r\n                  for (let i = 0; i < graph.nodes.length; i++) {\r\n                    const node = graph.nodes[i];\r\n                    const [position, id] = resultnodes[i];\r\n                    if (id !== node.index)\r\n                      throw Error('not matching id exception');\r\n                    node.x = position.m_X;\r\n                    node.y = position.m_Y;\r\n                  }\r\n\r\n                  return { graph };\r\n                }\r\n              })\r\n            );\r\n            break;\r\n          case 'gtree':\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: (graph: Graph) => {\r\n                  const resultnodes = (window as any).prism(graph.nodes);\r\n                  // console.log(resultnodes);\r\n                  for (let i = 0; i < graph.nodes.length; i++) {\r\n                    const node = graph.nodes[i];\r\n                    const [position, id] = resultnodes[i];\r\n                    if (id !== node.index)\r\n                      throw Error('not matching id exception');\r\n                    node.x = position.m_X;\r\n                    node.y = position.m_Y;\r\n                  }\r\n\r\n                  return { graph };\r\n                }\r\n              })\r\n            );\r\n            break;\r\n          case 'rwordle_l':\r\n            const rwordle_l = await import('agora-rworldle');\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: rwordle_l.RWordleLAlgorithm.algorithm\r\n              })\r\n            );\r\n            break;\r\n          case 'diamond':\r\n            const diamond = await import('agora-diamond');\r\n            dispatch(\r\n              addAlgorithm({\r\n                ...algo,\r\n                algorithm: diamond.diamondGraphRotation\r\n              })\r\n            );\r\n            break;\r\n        }\r\n      }\r\n\r\n      dispatch({ type: 'algFinished' });\r\n    };\r\n\r\n    load(selectedAlgs);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // finished loading algs, loading criteria\r\n  useEffect(() => {\r\n    if (state.algFinished) {\r\n      const load = async (criList: any[]) => {\r\n        const { default: _def, manager, ...criteria } = await import(\r\n          'agora-criteria'\r\n        );\r\n        for (const { id, name, group, path } of criList) {\r\n          dispatch(\r\n            addCriterion({\r\n              id,\r\n              name,\r\n              group,\r\n              criterion: _.get(criteria, path).criteria\r\n            })\r\n          );\r\n        }\r\n        // finished loading cri, parsing first file\r\n        dispatch({ type: 'incrementFileCounter' });\r\n      };\r\n\r\n      load(selectedCri);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [state.algFinished]);\r\n\r\n  // big loop\r\n  useEffect(() => {\r\n    // ignoring init :)\r\n    if (state.fileCounter > -1) {\r\n      dispatch({ type: 'resetAlgCounter' });\r\n      dispatch({\r\n        type: 'addDisplayableFile',\r\n        payload: finalFiles[state.fileCounter]\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [state.fileCounter]);\r\n\r\n  // display file view\r\n  useEffect(() => {\r\n    if (state.displayable.length > 0) {\r\n      const file = finalFiles[state.fileCounter];\r\n      // console.log(file.data);\r\n\r\n      const graph = crop(toGraph(file.data));\r\n      dispatch({ type: 'addInitial', payload: { graph, gml: file.data } });\r\n      dispatch({ type: 'incrementAlgCounter' });\r\n    } // eslint-disable-next-line\r\n  }, [state.displayable]);\r\n\r\n  // new Algorithm\r\n  useEffect(() => {\r\n    if (state.algCounter > -1) {\r\n      const current = state.algorithms[state.algCounter];\r\n      const { graph } = state.initials[state.fileCounter];\r\n      const graphcopy = {\r\n        nodes: graph.nodes.map(n => ({ ...n })),\r\n        edges: graph.edges.map(e => ({ ...e }))\r\n      };\r\n      const result = current.algorithm(graphcopy);\r\n      result.graph = crop(result.graph);\r\n      result.gml = toGML(result.graph);\r\n      dispatch({ type: 'addResult', payload: result });\r\n      dispatch({ type: 'incrementCriCounter' });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [state.algCounter]);\r\n\r\n  useEffect(() => {\r\n    if (state.criCounter > -1) {\r\n      const initial = state.initials[state.fileCounter];\r\n      const toEvaluate =\r\n        state.graphResults[state.fileCounter][state.algCounter];\r\n\r\n      const result = _.map(\r\n        state.criteria,\r\n        ({ criterion }) => criterion(initial.graph, toEvaluate.graph).value\r\n      );\r\n\r\n      dispatch({ type: 'addCriResult', payload: result });\r\n      if (state.algCounter !== state.algorithms.length - 1)\r\n        dispatch({ type: 'incrementAlgCounter' });\r\n      else if (state.fileCounter !== finalFiles.length - 1)\r\n        dispatch({ type: 'incrementFileCounter' });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [state.criCounter]);\r\n\r\n  if (finalFiles.length === 0) {\r\n    return <Redirect from=\"\" to=\"/\" noThrow />;\r\n  }\r\n  return (\r\n    <div className=\"tl mh3 code\">\r\n      {_.map(state.displayable, ({ id, name }, index) => {\r\n        const currentFileResults = state.graphResults[index];\r\n        const initial = state.initials[index];\r\n        const criteriaResult = state.criteriaResults[index];\r\n        return (\r\n          <section key={id} className=\"mv3\">\r\n            <article>\r\n              <h2>{name}</h2>\r\n              <Flex className=\"flex-wrap ml6-l\">\r\n                {initial && (\r\n                  <GraphMemo\r\n                    name=\"Initial\"\r\n                    graph={initial.graph}\r\n                    gml={initial.gml}\r\n                  />\r\n                )}\r\n\r\n                {currentFileResults &&\r\n                  _.map(currentFileResults, (result, algIndex) => {\r\n                    const algo = state.algorithms[algIndex];\r\n                    return (\r\n                      <GraphMemo\r\n                        key={algo.id}\r\n                        name={algo.name}\r\n                        graph={result.graph}\r\n                        gml={result.gml}\r\n                      />\r\n                    );\r\n                  })}\r\n              </Flex>\r\n            </article>\r\n            <article className=\"criteria\">\r\n              <div className=\"relative\">\r\n                <div className=\"inner overflow-x-auto\">\r\n                  <table className=\"table-fixed\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"tc\">Criterias</th>\r\n                        {_.map(state.algorithms, ({ id, name }) => (\r\n                          <th key={id}>{name}</th>\r\n                        ))}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {_.map(state.criteria, ({ id, name }, criIndex) => {\r\n                        return (\r\n                          <tr key={id} className=\"striped--near-white\">\r\n                            <th>{name}</th>\r\n                            {criteriaResult &&\r\n                              _.map(\r\n                                criteriaResult[criIndex],\r\n                                (value, resindex) => (\r\n                                  <td key={resindex}>{round(value, -4)}</td>\r\n                                )\r\n                              )}\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          </section>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GraphContainer: React.FC<{\r\n  name: string | any;\r\n  graph: Graph;\r\n  gml?: string;\r\n}> = ({ name, graph, gml }) => {\r\n  const [SVGContent, setSVGContent] = useState<string | null>(null);\r\n\r\n  const svgRef = useCallback(svgRef => {\r\n    if (svgRef) {\r\n      const serializer = new XMLSerializer();\r\n      setSVGContent(serializer.serializeToString(svgRef));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mh1 fixed-width\" style={{ height: '150px' }}>\r\n      <Flex column className=\"flex-wrap items-stretch\">\r\n        <h3>{name}</h3>\r\n        <div className=\"graph mv1\">\r\n          <SVGGraph graph={graph} svgRef={svgRef} width={100} height={88} />\r\n        </div>\r\n        <DownloadLinkList\r\n          name={name}\r\n          json={JSON.stringify(graph)}\r\n          gml={gml}\r\n          svg={SVGContent}\r\n        />\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\nconst GraphMemo = React.memo(GraphContainer);\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nexport const LogoLink: React.FC<{\r\n  link: string;\r\n  imageurl: string;\r\n  alt: string;\r\n}> = ({ link, imageurl, alt }) => {\r\n  return (\r\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <img height=\"64px\" src={imageurl} alt={alt} />\r\n    </a>\r\n  );\r\n};\r\nexport default LogoLink;\r\n\r\nexport const LogoLinkMemo: React.FC<{\r\n  link: string;\r\n  imageurl: string;\r\n  alt: string;\r\n}> = React.memo(LogoLink);\r\n","import React from 'react';\r\nimport { Router, Link } from '@reach/router';\r\nimport Home from './Home';\r\nimport Result from './Result';\r\nimport { Flex } from '../layout';\r\nimport LogoLink from './LogoLink';\r\n\r\nconst Page: React.FC = function() {\r\n  return (\r\n    <div className=\"mw9 center mt4 tc\">\r\n      <header>\r\n        <Link to=\"/\" style={{ textDecoration: 'none', color: 'inherit' }}>\r\n          <h1 className=\"lh-title tc\">AGORA</h1>\r\n        </Link>\r\n      </header>\r\n      <Router className=\"mh3-l\">\r\n        <Home path=\"/\" />\r\n        <Result path=\"/result\" />\r\n      </Router>\r\n      <Flex parent=\"footer\" className=\"justify-around pv3\">\r\n        <LogoLink\r\n          link=\"https://www.lirmm.fr/\"\r\n          imageurl=\"lirmm.png\"\r\n          alt=\"LIRMM\"\r\n        />\r\n        <LogoLink\r\n          link=\"https://www.univ-montp3.fr/\"\r\n          imageurl=\"um3.png\"\r\n          alt=\"UM3\"\r\n        />\r\n        <LogoLink\r\n          link=\"https://www.umontpellier.fr/\"\r\n          imageurl=\"um.png\"\r\n          alt=\"UM\"\r\n        />\r\n        <LogoLink link=\"https://www.cnrs.fr/\" imageurl=\"cnrs.png\" alt=\"CNRS\" />\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\nexport default Page;\r\n","import { AlgorithmType } from '../types';\r\n\r\nexport const defaultAlgorithmSelection = {\r\n  scale: true,\r\n  pfs: true,\r\n  pfsp: true,\r\n  fta: true,\r\n  vpsc: true,\r\n  prism: true,\r\n  gtree: true,\r\n  rwordle_l: true,\r\n  diamond: true\r\n};\r\n\r\nexport const defaultAlgorithms: AlgorithmType[] = [\r\n  { id: 'scale', name: 'SCALE' },\r\n  { id: 'pfs', name: 'PFS', reference: ['misue1995'] },\r\n  { id: 'pfsp', name: \"PFS'\", reference: ['hayashi1998'] },\r\n  { id: 'fta', name: 'FTA', reference: ['huang2007'] },\r\n  { id: 'vpsc', name: 'VPSC', reference: ['dwyer2005'] },\r\n  { id: 'prism', name: 'PRISM', reference: ['gansner2010'] },\r\n  { id: 'gtree', name: 'GTREE', reference: ['nachmanson2016'] },\r\n  { id: 'rwordle_l', name: 'RWordle-L', reference: ['strobelt2012'] },\r\n  { id: 'diamond', name: 'Diamond', reference: ['meulemans2019'] }\r\n];\r\n","import { CriterionType } from '../types';\r\n\r\nexport const defaultCriteria: CriterionType[] = [\r\n  {\r\n    id: 'oo_o',\r\n    name: 'Original',\r\n    group: 'Orthogonal Ordering',\r\n    path: 'OrthogonalOrdering.Original',\r\n    reference: ['misue1995']\r\n  },\r\n  {\r\n    id: 'oo_ktd',\r\n    name: \"Kendall's Tau Distance\",\r\n    path: 'OrthogonalOrdering.KendallTauDistance',\r\n    group: 'Orthogonal Ordering',\r\n    reference: ['huang2007']\r\n  },\r\n  {\r\n    id: 'oo_ni',\r\n    name: 'Number of Inversions',\r\n    group: 'Orthogonal Ordering',\r\n    path: 'OrthogonalOrdering.NumberInversions',\r\n    reference: ['strobelt2012']\r\n  },\r\n  {\r\n    id: 'oo_nni',\r\n    name: 'Normalised Number of Inversions',\r\n    group: 'Orthogonal Ordering',\r\n    path: 'OrthogonalOrdering.NormalizedNumberInversions',\r\n    reference: ['chen2019']\r\n  },\r\n  {\r\n    id: 'sp_bb_l1ml',\r\n    name: 'L1 Length',\r\n    group: 'Spread Minimisation',\r\n    fullname: 'Spread Minimisation/Bounding Box/L1 Metric Length',\r\n    path: 'Spread.BoundingBox.L1MetricLength',\r\n    reference: ['li2005']\r\n  },\r\n  {\r\n    id: 'sp_bb_a',\r\n    name: 'Bounding Box Area',\r\n    group: 'Spread Minimisation',\r\n    path: 'Spread.BoundingBox.Area',\r\n    reference: ['misue1995']\r\n  },\r\n  {\r\n    id: 'sp_bb_na',\r\n    name: 'Bounding Box Normalized Area',\r\n    group: 'Spread Minimisation',\r\n    path: 'Spread.BoundingBox.NormalizedArea',\r\n    reference: ['huang2007']\r\n  },\r\n  {\r\n    id: 'sp_ch_a',\r\n    name: 'Convex Hull Area',\r\n    group: 'Spread Minimisation',\r\n    path: 'Spread.ConvexHull.Area',\r\n    reference: ['strobelt2012']\r\n  },\r\n  {\r\n    id: 'gs_bb_ar',\r\n    name: 'Aspect Ratio',\r\n    group: 'Global Shape Preservation',\r\n    fullname: 'Global Shape Preservation/Bounding Box/Aspect Ratio',\r\n    path: 'GlobalShape.BoundingBox.AspectRatio',\r\n    reference: ['li2005']\r\n  },\r\n  {\r\n    id: 'gs_bb_iar',\r\n    name: 'Improved Aspect Ratio',\r\n    fullname: 'Global Shape Preservation/Bounding Box/Improved Aspect Ratio',\r\n    group: 'Global Shape Preservation',\r\n    path: 'GlobalShape.BoundingBox.ImprovedAspectRatio',\r\n    reference: ['chen2019']\r\n  },\r\n  {\r\n    id: 'gs_ch_sd',\r\n    name: 'Standard Deviation',\r\n    fullname: 'Global Shape Preservation/Convex Hull/Standard Deviation',\r\n    group: 'Global Shape Preservation',\r\n    path: 'GlobalShape.ConvexHull.StandardDeviation',\r\n    reference: ['strobelt2012']\r\n  },\r\n  {\r\n    id: 'nm_mn',\r\n    name: 'Moved Nodes',\r\n    group: 'Node Movement Minimisation',\r\n    path: 'NodeMovement.MovedNodes',\r\n    reference: ['huang2007']\r\n  },\r\n  {\r\n    id: 'nm_dm_me',\r\n    name: 'Mean Euclidean',\r\n    fullname: 'Node Movement Minimisation/Distance Moved/Mean Euclidean',\r\n    group: 'Node Movement Minimisation',\r\n    path: 'NodeMovement.DistanceMoved.MeanEuclidean',\r\n    reference: ['strobelt2012']\r\n  },\r\n  {\r\n    id: 'nm_dm_ne',\r\n    name: 'Normalised Euclidean',\r\n    fullname: 'Node Movement Minimisation/Distance Moved/Normalised Euclidean',\r\n    group: 'Node Movement Minimisation',\r\n    path: 'NodeMovement.DistanceMoved.NormalizedEuclidean',\r\n    reference: ['lyons1998']\r\n  },\r\n  {\r\n    id: 'nm_dm_h',\r\n    name: 'Hamiltonian',\r\n    fullname: 'Node Movement Minimisation/Distance Moved/Hamiltonian',\r\n    group: 'Node Movement Minimisation',\r\n    path: 'NodeMovement.DistanceMoved.Hamiltonian',\r\n    reference: ['huang2003', 'huang2007']\r\n  },\r\n  {\r\n    id: 'nm_dm_se',\r\n    name: 'Squared Euclidean',\r\n    fullname: 'Node Movement Minimisation/Distance Moved/Squared Euclidean',\r\n    group: 'Node Movement Minimisation',\r\n    path: 'NodeMovement.DistanceMoved.SquaredEuclidean',\r\n    reference: ['marriot2003']\r\n  },\r\n  {\r\n    id: 'nm_dm_imse',\r\n    name: 'Improved Mean Squared Euclidean',\r\n    fullname:\r\n      'Node Movement Minimisation/Distance Moved/Improved Mean Squared Euclidean',\r\n    group: 'Node Movement Minimisation',\r\n    path: 'NodeMovement.DistanceMoved.ImprovedMeanSquaredEuclidean',\r\n    reference: ['chen2019']\r\n  },\r\n  {\r\n    id: 'nm_knn',\r\n    name: 'K-Nearest Neighbours',\r\n    group: 'Node Movement Minimisation',\r\n    path: 'NodeMovement.KNearestNeighbors.default',\r\n    reference: ['nachmanson2016']\r\n  },\r\n  {\r\n    id: 'eb_r',\r\n    name: 'Ratio',\r\n    group: 'Edge Length Preservation',\r\n    path: 'EdgeBased.Ratio',\r\n    reference: ['li2005']\r\n  },\r\n  {\r\n    id: 'e_rsdd',\r\n    name: 'Relative Standard Deviation Delaunay',\r\n    group: 'Edge Length Preservation',\r\n    path: 'EdgeBased.RelativeStandardDeviationDelaunay',\r\n    reference: ['gansner2010']\r\n  }\r\n];\r\n\r\nexport const defaultCriteriaSelection = {\r\n  oo_o: false,\r\n  oo_ktd: false,\r\n  oo_ni: false,\r\n  oo_nni: true,\r\n  sp_bb_l1ml: false,\r\n  sp_bb_a: false,\r\n  sp_bb_na: false,\r\n  sp_ch_a: true,\r\n  gs_bb_ar: false,\r\n  gs_bb_iar: true,\r\n  gs_ch_sd: false,\r\n  nm_mn: false,\r\n  nm_dm_me: false,\r\n  nm_dm_ne: false,\r\n  nm_dm_h: false,\r\n  nm_dm_se: false,\r\n  nm_dm_imse: true,\r\n  nm_knn: false,\r\n  eb_r: false,\r\n  e_rsdd: true\r\n};\r\n","export const defaultExamples = [\r\n  { selected: false, file: 'b124.gml' },\r\n  { selected: false, file: 'dpd.gml' },\r\n  { selected: false, file: 'NaN.gml' },\r\n  { selected: false, file: 'ngk10_4.gml' },\r\n  { selected: false, file: 'random_50_16.gml' },\r\n  { selected: false, file: 'random_100_25.gml' },\r\n  { selected: false, file: 'random_200_15.gml' },\r\n  { selected: false, file: 'rowe.gml' },\r\n  { selected: false, file: 'size.gml' },\r\n  { selected: false, file: 'unix.gml' }\r\n];\r\n","import { PayloadAction } from 'typesafe-actions';\r\nimport _ from 'lodash';\r\nimport { SelectionType } from '../types';\r\n\r\nexport const toggle = (\r\n  state: SelectionType,\r\n  { payload }: PayloadAction<string, string>\r\n) => {\r\n  if (state[payload] !== undefined) {\r\n    state[payload] = !state[payload];\r\n    return { ...state };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const set = (\r\n  state: SelectionType,\r\n  { payload: [name, value] }: PayloadAction<string, [string, boolean]>\r\n) => {\r\n  if (state[name] !== undefined) {\r\n    state[name] = value;\r\n    return { ...state };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const selectMany = (\r\n  state: SelectionType,\r\n  { payload }: PayloadAction<string, SelectionType>\r\n) => {\r\n  _.forEach(payload, (__, key) => {\r\n    if (state[key] === false) {\r\n      state[key] = true;\r\n    }\r\n  });\r\n  return { ...state };\r\n};\r\n\r\nexport const setAll = (\r\n  state: SelectionType,\r\n  { payload }: PayloadAction<string, boolean>\r\n) => {\r\n  const copy: SelectionType = {};\r\n  _.forEach(state, (__, key) => {\r\n    copy[key] = payload;\r\n  });\r\n  return copy;\r\n};\r\n","import { createReducer } from 'typesafe-actions';\r\nimport * as actions from '../actions/algorithm-selection';\r\n\r\nimport { toggle, set, selectMany, setAll } from './selection-utils';\r\nexport const algorithmSelection = createReducer({})\r\n  .handleAction(actions.toggleAlg, toggle)\r\n  .handleAction(actions.setAlg, set)\r\n  .handleAction(actions.selectManyAlg, selectMany)\r\n  .handleAction(actions.setAllAlg, setAll);\r\n\r\nexport default algorithmSelection;\r\n","import { createReducer } from 'typesafe-actions';\r\nimport { AlgorithmType } from '../types';\r\nimport { defaultAlgorithms } from '../defaults/algorithms';\r\n\r\nexport const algorithms = createReducer<AlgorithmType[]>(defaultAlgorithms);\r\nexport default algorithms;\r\n","import { createReducer } from 'typesafe-actions';\r\nimport { CriterionType } from '../types';\r\nimport { defaultCriteria } from '../defaults/criteria';\r\n\r\nexport const criteria = createReducer<CriterionType[]>(defaultCriteria);\r\nexport default criteria;\r\n","import { createReducer } from 'typesafe-actions';\r\nimport * as actions from '../actions/criteria-selection';\r\nimport { toggle, set, selectMany, setAll } from './selection-utils';\r\n\r\nexport const criteriaSelection = createReducer({})\r\n  .handleAction(actions.toggleCri, toggle)\r\n  .handleAction(actions.setCri, set)\r\n  .handleAction(actions.selectManyCri, selectMany)\r\n  .handleAction(actions.setAllCri, setAll);\r\n\r\nexport default criteriaSelection;\r\n","import { createReducer, ActionType } from 'typesafe-actions';\r\nimport { defaultExamples } from '../defaults/examples';\r\nimport { SelectableFileType } from '../types';\r\nimport * as actions from '../actions/examples-selection';\r\nexport const examples = createReducer<\r\n  SelectableFileType[],\r\n  ActionType<typeof actions>\r\n>(defaultExamples).handleAction(\r\n  actions.toggleExampleSelection,\r\n  (state, action) =>\r\n    state.map(v => {\r\n      if (v.file === action.payload) v.selected = !v.selected;\r\n      return v;\r\n    })\r\n);\r\nexport default examples;\r\n","import { createReducer, ActionType } from 'typesafe-actions';\r\nimport _ from 'lodash';\r\nimport * as actions from '../actions/file';\r\nimport { FileType } from '../types';\r\n\r\nexport const fileList = createReducer<FileType[], ActionType<typeof actions>>(\r\n  []\r\n)\r\n  .handleAction(actions.addFile, (state, action) =>\r\n    _.find(state, ['id', action.payload.id])\r\n      ? state\r\n      : [...state, action.payload]\r\n  )\r\n  .handleAction(actions.addFiles, (state, action) => [\r\n    ...state,\r\n    ...action.payload\r\n  ])\r\n  .handleAction(actions.removeFile, (state, action) =>\r\n    _.filter(state, file => file.id !== action.payload)\r\n  )\r\n  .handleAction(actions.clearFiles, () => []);\r\nexport default fileList;\r\n","import { createReducer, ActionType } from 'typesafe-actions';\r\nimport * as actions from '../actions/is-upload';\r\n\r\nexport const isUpload = createReducer<boolean, ActionType<typeof actions>>(true)\r\n  .handleAction(actions.setAsUpload, () => true)\r\n  .handleAction(actions.setAsExample, () => false);\r\nexport default isUpload;\r\n","import { createReducer } from 'typesafe-actions';\r\nimport { ReferenceType } from '../types';\r\n\r\nexport const references = createReducer<ReferenceType[]>([]);\r\nexport default references;\r\n","import { createReducer, ActionType } from 'typesafe-actions';\r\nimport _ from 'lodash';\r\nimport * as actions from '../actions/examples-files';\r\n\r\nexport const exampleFilesList = createReducer<\r\n  { id: string; data: string }[],\r\n  ActionType<typeof actions>\r\n>([])\r\n  .handleAction(actions.addExampleFile, (state, action) => {\r\n    return _.find(state, ['id', action.payload.id])\r\n      ? state\r\n      : [...state, action.payload];\r\n  })\r\n  .handleAction(actions.removeExampleFile, (state, action) =>\r\n    _.filter(state, file => file.id !== action.payload)\r\n  );\r\nexport default exampleFilesList;\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {\r\n  defaultAlgorithms,\r\n  defaultAlgorithmSelection\r\n} from './defaults/algorithms';\r\nimport { defaultCriteria, defaultCriteriaSelection } from './defaults/criteria';\r\nimport { defaultExamples } from './defaults/examples';\r\nimport { defaultReferences } from './defaults/references';\r\n\r\nimport algorithmSelection from './reducers/algorithm-selection';\r\nimport algorithms from './reducers/algorithms';\r\nimport criteria from './reducers/criteria';\r\nimport criteriaSelection from './reducers/criteria-selection';\r\nimport examples from './reducers/examples';\r\nimport fileList from './reducers/files';\r\nimport isUpload from './reducers/is-upload';\r\nimport references from './reducers/references';\r\nimport exampleFilesList from './reducers/example-files';\r\nimport {\r\n  AlgorithmType,\r\n  CriterionType,\r\n  FileType,\r\n  ReferenceType,\r\n  SelectionType,\r\n  SelectableFileType\r\n} from './types';\r\n\r\nexport const reducers = combineReducers({\r\n  algorithms,\r\n  algorithmSelection,\r\n  criteria,\r\n  criteriaSelection,\r\n  files: fileList,\r\n  isUpload,\r\n  references,\r\n  examples,\r\n  exampleFiles: exampleFilesList\r\n  // examples: null\r\n});\r\n\r\nexport type StateType = {\r\n  algorithms: AlgorithmType[];\r\n  algorithmSelection: SelectionType;\r\n  criteria: CriterionType[];\r\n  criteriaSelection: SelectionType;\r\n  files: FileType[];\r\n  // examples: SelectionType;\r\n  isUpload: boolean;\r\n  references: ReferenceType[];\r\n  examples: SelectableFileType[];\r\n  exampleFiles: FileType[];\r\n};\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  {\r\n    algorithms: defaultAlgorithms,\r\n    algorithmSelection: defaultAlgorithmSelection,\r\n    criteria: defaultCriteria,\r\n    criteriaSelection: defaultCriteriaSelection,\r\n    files: [],\r\n    isUpload: true,\r\n    references: defaultReferences,\r\n    examples: defaultExamples,\r\n    exampleFiles: []\r\n    // examples: { test: true }\r\n  },\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import { ReferenceType } from '../types';\r\n\r\nexport const defaultReferences: ReferenceType[] = [\r\n  {\r\n    id: 'misue1995',\r\n    authors: 'K. Misue, P. Eades, W. Lai, and K. Sugiyama',\r\n    title: 'Layout adjustment and the mental map',\r\n    hasIn: false,\r\n    journal: 'Journal of Visual Languages & Computing',\r\n    additional: '6(2): 83–210, 1995'\r\n  },\r\n  {\r\n    id: 'lyons1998',\r\n    authors: 'K. A. Lyons, H. Meijer, and D. Rappaport',\r\n    title: 'Algorithms for cluster busting in anchored graph drawing',\r\n    hasIn: false,\r\n    journal: 'Journal of Graph Algorithms and Applications',\r\n    additional: '2(1): 1–24, 1998'\r\n  },\r\n  {\r\n    id: 'hayashi1998',\r\n    authors: 'K. Hayashi, M. Inoue, T. Masuzawa, and H. Fujiwara',\r\n    title:\r\n      'A layout adjustment problem for disjoint rectangles preserving orthogonal order',\r\n    hasIn: true,\r\n    journal: 'Proceedings of the International Symposium on Graph Drawing (GD)',\r\n    additional: 'pages 183–197. Springer, 1998'\r\n  },\r\n  {\r\n    id: 'huang2003',\r\n    authors: 'X. Huang and W. Lai',\r\n    title:\r\n      'Force-transfer: a new approach to removing overlapping nodes in graph layout',\r\n    hasIn: true,\r\n    journal:\r\n      'Proceedings of the Australasian computer science conference - Volume 16',\r\n    additional: 'pages 349–358. Australian Computer Society, Inc., 2003'\r\n  },\r\n  {\r\n    id: 'marriot2003',\r\n    authors: 'K. Marriott, P. Stuckey, V. Tam, and W. He',\r\n    title:\r\n      'Removing node overlapping in graph layout using constrained optimization',\r\n    hasIn: false,\r\n    journal: 'Constraints',\r\n    additional: '8(2): 43–171, 2003'\r\n  },\r\n  {\r\n    id: 'li2005',\r\n    authors: 'W. Li, P. Eades, and N. Nikolov',\r\n    title: 'Using spring algorithms to remove node overlapping',\r\n    hasIn: true,\r\n    journal:\r\n      'Proceedings of the Asia-Pacific Symposium on Information Visualisation (APVis’05)',\r\n    additional: 'pages 131–140. Australian Computer Society, Inc., 2005'\r\n  },\r\n  {\r\n    id: 'dwyer2005',\r\n    authors: 'T. Dwyer, K. Marriott, and P. J. Stuckey',\r\n    title: 'Fast node overlap removal',\r\n    hasIn: true,\r\n    journal: 'Proceedings of the International Symposium on Graph Drawing (GD)',\r\n    additional: 'pages 153–164. Springer, 2005'\r\n  },\r\n  {\r\n    id: 'huang2007',\r\n    authors: 'X. Huang, W. Lai, A. Sajeev, and J. Gao',\r\n    title:\r\n      'A new algorithm for removing node overlapping in graph visualization',\r\n    hasIn: false,\r\n    journal: 'Information Sciences',\r\n    additional: '177(14): 2821–2844, 2007'\r\n  },\r\n  {\r\n    id: 'gansner2010',\r\n    authors: 'E. Gansner and Y. Hu',\r\n    title: 'Efficient, proximity-preserving node overlap removal',\r\n    hasIn: false,\r\n    journal: 'Journal of Graph Algorithms and Applications',\r\n    additional: '14(1): 53–74, 2010'\r\n  },\r\n  {\r\n    id: 'strobelt2012',\r\n    authors: 'H. Strobelt, M. Spicker, A. Stoffel, D. Keim, and O. Deussen',\r\n    title:\r\n      'Rolled-out wordles: A heuristic method for overlap removal of 2d data representatives',\r\n    hasIn: false,\r\n    journal: 'Computer Graphics Forum',\r\n    additional: '31(3): 1135–1144, 2012'\r\n  },\r\n  {\r\n    id: 'nachmanson2016',\r\n    authors: 'L. Nachmanson, A. Nocaj, S. Bereg, L. Zhang, and A. Holroyd',\r\n    title: 'Node overlap removal by growing a tree',\r\n    hasIn: true,\r\n    journal:\r\n      'Proceedings of the International Symposium on Graph Drawing and Network Visualization (GD)',\r\n    additional: 'pages 33–43. Springer, 2016'\r\n  },\r\n  {\r\n    id: 'meulemans2019',\r\n    authors: 'W. Meulemans',\r\n    title: 'Efficient optimal overlap removal',\r\n    hasIn: false,\r\n    journal: 'Computer Graphics Forum',\r\n    additional: '38(3): 713–723, 2019'\r\n  },\r\n  {\r\n    id: 'chen2019',\r\n    authors: 'F. Chen, L. Piccinini, P. Poncelet, and A. Sallaberry',\r\n    title: 'Node overlap removal algorithms: A comparative study',\r\n    hasIn: true,\r\n    journal:\r\n      'Proceedings of the International Symposium on Graph Drawing and Network Visualization (GD)',\r\n    additional: 'page to appear. Springer, 2019'\r\n  }\r\n  // TODO: SOON\r\n  // {\r\n  //   id: 'chen2020',\r\n  //   authors: 'F. Chen, L. Piccinini, P. Poncelet, and A. Sallaberry',\r\n  //   title: 'Node Overlap Removal Algorithms: An Extended Comparative Study',\r\n  //   hasIn: false,\r\n  //   journal: 'Ongoing research'\r\n  // }\r\n];\r\n","import 'tachyons/css/tachyons.min.css';\r\nimport 'nes.css/css/nes.min.css';\r\nimport './index.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Page from './pages';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Page />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}