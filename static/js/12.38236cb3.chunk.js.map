{"version":3,"sources":["../node_modules/agora-criteria/dist/utils.js","../node_modules/d3-polygon/src/area.js","../node_modules/d3-polygon/src/centroid.js","../node_modules/d3-polygon/src/cross.js","../node_modules/d3-polygon/src/hull.js","../node_modules/d3-polygon/src/contains.js","../node_modules/d3-polygon/src/length.js","../node_modules/d3-polygon/src/index.js","../node_modules/agora-criteria/dist/spread/convex-hull_area.js"],"names":["Object","defineProperty","exports","value","criteriaWrap","_a","name","_criteria","criteria","_short","short","initial","updated","nodes","length","Error","a","i","n","polygon","b","area","c","x","y","k","lexicographicOrder","computeUpperHullIndexes","points","indexes","size","cross","slice","sortedPoints","Array","flippedPoints","sort","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","push","x1","y1","p","point","x0","y0","inside","xa","ya","xb","yb","perimeter","Math","sqrt","__importDefault","this","mod","__esModule","d3_polygon_1","lodash_1","agora_graph_1","utils_1","convertNodes","default","flatMap","t","top","l","left","r","right","bottom","sizeIncrease","initialHull","polygonHull","updatedHull","error","initialArea","polygonArea","updatedArea","SpreadConvexHullAreaCriteria"],"mappings":"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","file":"static/js/12.38236cb3.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction criteriaWrap(_a) {\n  var name = _a.name,\n      _criteria = _a.criteria,\n      _short = _a.short;\n  return {\n    name: name,\n    short: _short,\n    criteria: function criteria(initial, updated) {\n      if (initial.nodes.length !== updated.nodes.length) {\n        //* ignoring console because it's captured by the exception\n\n        /*\r\n        console.error(\r\n        'criteria', // family\r\n        criteria.short, // type\r\n        'abording', // action\r\n        'not the same number of nodes' // reason\r\n        ); */\n        throw Error(\"Criteria \" + (_short ? _short : name) + \" abording : not same number of nodes\");\n      }\n\n      return _criteria(initial, updated);\n    }\n  };\n}\n\nexports.criteriaWrap = criteriaWrap;","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function (a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n} // Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\n\n\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {\n      --size;\n    }\n\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function (points) {\n  if ((n = points.length) < 3) return null;\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) {\n    sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  }\n\n  sortedPoints.sort(lexicographicOrder);\n\n  for (i = 0; i < n; ++i) {\n    flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n  }\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.\n\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = []; // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n\n  for (i = upperIndexes.length - 1; i >= 0; --i) {\n    hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  }\n\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {\n    hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n  }\n\n  return hull;\n}","export default function (polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0],\n      y = point[1],\n      x0 = p[0],\n      y0 = p[1],\n      x1,\n      y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}","export default function (polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}","export { default as polygonArea } from \"./area\";\nexport { default as polygonCentroid } from \"./centroid\";\nexport { default as polygonHull } from \"./hull\";\nexport { default as polygonContains } from \"./contains\";\nexport { default as polygonLength } from \"./length\";","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar d3_polygon_1 = require(\"d3-polygon\");\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../utils\"); // Spread::Convex Hull::Area -- Strobelt 2012 SSS*12\n// TODO: SSS*12\n\n\nexports.sizeIncrease = function (initial, updated) {\n  var initialHull = d3_polygon_1.polygonHull(convertNodes(initial.nodes));\n  var updatedHull = d3_polygon_1.polygonHull(convertNodes(updated.nodes));\n  if (initialHull === null || updatedHull === null) return {\n    value: -1,\n    error: 'could not compute initial or updated convex hull'\n  };\n  var initialArea = d3_polygon_1.polygonArea(initialHull);\n  var updatedArea = d3_polygon_1.polygonArea(updatedHull);\n  return {\n    value: updatedArea / initialArea,\n    initial: initialArea,\n    updated: updatedArea\n  };\n};\n\nfunction convertNodes(nodes) {\n  // TODO: add node boxes\n  return lodash_1.default.flatMap(nodes, function (n) {\n    var t = agora_graph_1.top(n),\n        l = agora_graph_1.left(n),\n        r = agora_graph_1.right(n),\n        b = agora_graph_1.bottom(n);\n    return [[l, t], [r, t], [r, b], [l, b]];\n  });\n}\n\nexports.SpreadConvexHullAreaCriteria = utils_1.criteriaWrap({\n  criteria: exports.sizeIncrease,\n  name: 'spread/convex-hull/area',\n  short: 'sp_ch_a'\n});\nexports.default = exports.SpreadConvexHullAreaCriteria;"],"sourceRoot":""}