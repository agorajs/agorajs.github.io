(this.webpackJsonpagora=this.webpackJsonpagora||[]).push([[10],{539:function(r,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.criteriaWrap=function(r){var t=r.name,n=r.criteria,e=r.short;return{name:t,short:e,criteria:function(r,a){if(r.nodes.length!==a.nodes.length)throw Error("Criteria "+(e||t)+" abording : not same number of nodes");return n(r,a)}}}},589:function(r,t,n){"use strict";n.r(t);var e=function(r){for(var t,n=-1,e=r.length,a=r[e-1],o=0;++n<e;)t=a,a=r[n],o+=t[1]*a[0]-t[0]*a[1];return o/2},a=function(r){for(var t,n,e=-1,a=r.length,o=0,u=0,i=r[a-1],l=0;++e<a;)t=i,i=r[e],l+=n=t[0]*i[1]-i[0]*t[1],o+=(t[0]+i[0])*n,u+=(t[1]+i[1])*n;return[o/(l*=3),u/l]},o=function(r,t,n){return(t[0]-r[0])*(n[1]-r[1])-(t[1]-r[1])*(n[0]-r[0])};function u(r,t){return r[0]-t[0]||r[1]-t[1]}function i(r){for(var t=r.length,n=[0,1],e=2,a=2;a<t;++a){for(;e>1&&o(r[n[e-2]],r[n[e-1]],r[a])<=0;)--e;n[e++]=a}return n.slice(0,e)}var l=function(r){if((n=r.length)<3)return null;var t,n,e=new Array(n),a=new Array(n);for(t=0;t<n;++t)e[t]=[+r[t][0],+r[t][1],t];for(e.sort(u),t=0;t<n;++t)a[t]=[e[t][0],-e[t][1]];var o=i(e),l=i(a),s=l[0]===o[0],f=l[l.length-1]===o[o.length-1],c=[];for(t=o.length-1;t>=0;--t)c.push(r[e[o[t]][2]]);for(t=+s;t<l.length-f;++t)c.push(r[e[l[t]][2]]);return c},s=function(r,t){for(var n,e,a=r.length,o=r[a-1],u=t[0],i=t[1],l=o[0],s=o[1],f=!1,c=0;c<a;++c)n=(o=r[c])[0],(e=o[1])>i!==s>i&&u<(l-n)*(i-e)/(s-e)+n&&(f=!f),l=n,s=e;return f},f=function(r){for(var t,n,e=-1,a=r.length,o=r[a-1],u=o[0],i=o[1],l=0;++e<a;)t=u,n=i,t-=u=(o=r[e])[0],n-=i=o[1],l+=Math.sqrt(t*t+n*n);return l};n.d(t,"polygonArea",(function(){return e})),n.d(t,"polygonCentroid",(function(){return a})),n.d(t,"polygonHull",(function(){return l})),n.d(t,"polygonContains",(function(){return s})),n.d(t,"polygonLength",(function(){return f}))},808:function(r,t,n){"use strict";var e=this&&this.__importStar||function(r){if(r&&r.__esModule)return r;var t={};if(null!=r)for(var n in r)Object.hasOwnProperty.call(r,n)&&(t[n]=r[n]);return t.default=r,t};Object.defineProperty(t,"__esModule",{value:!0});var a=e(n(589)),o=e(n(3)),u=n(84),i=n(539);function l(r){for(var t=a.polygonCentroid(r),n=o.map(r,(function(r){return[r[0]-t[0],r[1]-t[1]]})),e=[],i=0;i<360;i+=10)e.push({angle:i,length:1,theta:u.round(i*(Math.PI/180),-14)});var l=function(r){var t=o.sortBy(r,(function(r){return r[1].angle}));if(0===t.length)return[];if(1===t.length)return[{start:[t[0][0],t[0][1].angle],end:[t[0][0],t[0][1].angle+360]}];for(var n=t[t.length-1],e=t[0],a=[{start:[n[0],n[1].angle-360],end:[e[0],e[1].angle]}],u=1;u<t.length;u++)a.push({start:[e[0],e[1].angle],end:[t[u][0],t[u][1].angle]}),e=t[u];return a.push({start:[e[0],e[1].angle],end:[t[0][0],t[0][1].angle+360]}),a}(o.map(n,(function(r){return[r,u.toPolar({x:r[0],y:r[1]})]}))),s=[];return o.forEach(e,(function(r){var t=function(r,t){for(var n=0,e=r;n<e.length;n++){var a=e[n];if(a.start[1]<=t.angle&&a.end[1]>t.angle)return a}throw Error("Unreachable error, how did you manage to get here")}(l,r),n=u.toCartesian(r),e=function(r,t){var n=(t.end[1]-t.start[1])*(r.end[0]-r.start[0])-(t.end[0]-t.start[0])*(r.end[1]-r.start[1]);if(0==n)return null;var e=r.start[1]-t.start[1],a=r.start[0]-t.start[0],o=(t.end[0]-t.start[0])*e-(t.end[1]-t.start[1])*a,u=(r.end[0]-r.start[0])*e-(r.end[1]-r.start[1])*a;return e=o/n,a=u/n,{x:r.start[0]+e*(r.end[0]-r.start[0]),y:r.start[1]+e*(r.end[1]-r.start[1])}}({start:[0,0],end:[n.x,n.y]},{start:t.start[0],end:t.end[0]});if(!e)throw Error("it is supposed to intersect :(");s.push(u.magnitude(e))})),s}function s(r){return o.flatMap(r,(function(r){var t=u.top(r),n=u.left(r),e=u.right(r),a=u.bottom(r);return[[n,t],[e,t],[e,a],[n,a]]}))}t.shapePreservation=function(r,t){var n=a.polygonHull(s(r.nodes)),e=a.polygonHull(s(t.nodes));if(null===n||null===e)return{value:-1,error:"could not compute initial or updated convex hull"};for(var u=l(n),i=l(e),f=[],c=0;c<u.length;c++)f.push(i[c]/u[c]);var d=o.mean(f);return{value:o.sumBy(f,(function(r){return Math.pow(r-d,2)})),initial:u,updated:i}},t.calculateConvexHullDistances=l,t.GlobalShapeConvexHullStandardDeviationCriteria=i.criteriaWrap({criteria:t.shapePreservation,name:"global-shape/convex-hull/standard-deviation",short:"gs_ch_sd"}),t.default=t.GlobalShapeConvexHullStandardDeviationCriteria}}]);
//# sourceMappingURL=10.08a400bb.chunk.js.map