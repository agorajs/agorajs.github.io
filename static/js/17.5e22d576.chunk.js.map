{"version":3,"sources":["../node_modules/agora-criteria/dist/utils.js","../node_modules/agora-criteria/dist/node-movement/distance-moved/improved-mean-squared-euclidean.js"],"names":["Object","defineProperty","exports","value","criteriaWrap","_a","name","_criteria","criteria","_short","short","initial","updated","nodes","length","Error","__importDefault","this","mod","__esModule","lodash_1","agora_graph_1","utils_1","getScale","a","b","getCenter","orientation","min","default","minBy","max","maxBy","getSpan","scaleChange","nodesLength","scale","initialCenteredNodes","sortBy","positionFromCenter","updatedCenteredNodes","reduce","_b","displacement","x","y","index","projected","round","up","find","diff","norm","push","center_x","center_y","map","NodeMovementDistanceMovedImprovedMeanSquaredEuclideanCriteria"],"mappings":"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","file":"static/js/17.5e22d576.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction criteriaWrap(_a) {\n  var name = _a.name,\n      _criteria = _a.criteria,\n      _short = _a.short;\n  return {\n    name: name,\n    short: _short,\n    criteria: function criteria(initial, updated) {\n      if (initial.nodes.length !== updated.nodes.length) {\n        //* ignoring console because it's captured by the exception\n\n        /*\r\n        console.error(\r\n        'criteria', // family\r\n        criteria.short, // type\r\n        'abording', // action\r\n        'not the same number of nodes' // reason\r\n        ); */\n        throw Error(\"Criteria \" + (_short ? _short : name) + \" abording : not same number of nodes\");\n      }\n\n      return _criteria(initial, updated);\n    }\n  };\n}\n\nexports.criteriaWrap = criteriaWrap;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar lodash_1 = __importDefault(require(\"lodash\"));\n\nvar agora_graph_1 = require(\"agora-graph\");\n\nvar utils_1 = require(\"../../utils\");\n/**\r\n * scale to transform a to b\r\n * @param a first value\r\n * @param b second value\r\n */\n\n\nvar getScale = function getScale(a, b) {\n  return b / a;\n};\n\nfunction getCenter(nodes, orientation) {\n  var min = lodash_1.default.minBy(nodes, orientation);\n  var max = lodash_1.default.maxBy(nodes, orientation);\n\n  if (!min || !max) {\n    throw Error(\"Criteria nm_dm_imse getCenter error either: \" + min + \" or \" + max);\n  }\n\n  return max[orientation] / 2 + min[orientation] / 2;\n}\n\nfunction getSpan(nodes, orientation) {\n  var min = lodash_1.default.minBy(nodes, orientation);\n  var max = lodash_1.default.maxBy(nodes, orientation);\n\n  if (!min || !max) {\n    throw Error(\"Criteria nm_dm_imse getSpan error either: \" + min + \" or \" + max);\n  }\n\n  return max[orientation] - min[orientation];\n}\n\nfunction scaleChange(initial, updated) {\n  var nodesLength = initial.nodes.length;\n  var scale = {\n    x: getScale(getSpan(initial.nodes, 'x'), getSpan(updated.nodes, 'x')),\n    y: getScale(getSpan(initial.nodes, 'y'), getSpan(updated.nodes, 'y'))\n  };\n  var initialCenteredNodes = lodash_1.default.sortBy(positionFromCenter(initial.nodes), 'index');\n  var updatedCenteredNodes = lodash_1.default.sortBy(positionFromCenter(updated.nodes), 'index');\n  return lodash_1.default.reduce(initialCenteredNodes, function (_a, _b) {\n    var value = _a.value,\n        displacement = _a.displacement;\n    var x = _b.x,\n        y = _b.y,\n        index = _b.index;\n    var projected = {\n      x: agora_graph_1.round(x * scale.x, -9),\n      y: agora_graph_1.round(y * scale.y, -9)\n    };\n    var up = lodash_1.default.find(updatedCenteredNodes, ['index', index]);\n    if (!up) throw Error(\"Criteria nm_dm_imse : index \" + index + \" does not exist in updated\");\n    var diff = agora_graph_1.norm(projected, up);\n    value += diff * diff / nodesLength;\n    displacement.push(diff);\n    return {\n      value: value,\n      displacement: displacement\n    };\n  }, {\n    value: 0,\n    displacement: []\n  });\n}\n\nexports.scaleChange = scaleChange;\n\nfunction positionFromCenter(nodes) {\n  var center_x = getCenter(nodes, 'x');\n  var center_y = getCenter(nodes, 'y');\n  return lodash_1.default.map(nodes, function (_a) {\n    var index = _a.index,\n        x = _a.x,\n        y = _a.y;\n    return {\n      index: index,\n      x: x - center_x,\n      y: y - center_y\n    };\n  });\n}\n\nexports.NodeMovementDistanceMovedImprovedMeanSquaredEuclideanCriteria = utils_1.criteriaWrap({\n  criteria: scaleChange,\n  name: 'node-movement/distance-moved/improved-mean-squared-euclidean',\n  short: 'nm_dm_imse'\n});\nexports.default = exports.NodeMovementDistanceMovedImprovedMeanSquaredEuclideanCriteria;"],"sourceRoot":""}